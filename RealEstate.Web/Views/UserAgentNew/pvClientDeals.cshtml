@model RealEstate.Entities.ViewModels.MstCreateClientAndAssignAgentModel
<div class="col-sm-12 clients-list-section transactions-listing" id="DealsDataGrid">
    @if (Model.ClientList.Count() > 0)
    {
    <div class="clients-list-inner addNewTrans">
        <h3 class="heading">
            Transactions
            <a href="#" class="btn tealButton" data-toggle="modal" data-target="#addNewTransModal">Add New</a>
          
                @*<a  class="btn tealButton" href="@Url.Action("createtransaction","UserAgentNew")" data-trans=""><i class="btn btn-sm btn-danger">Add new transaction</i></a>*@
          
        </h3>

        <div class="table-wrapper">
            <div class="listing-table custom-table">
                <div class="tableHeadRow">
                    <div class="tableCell type"><a href="#" class="sorting">Type</a></div>
                    <div class="tableCell agentName">Agent Name</div>
                    <div class="tableCell addrees">Address</div>
                    <div class="tableCell stage"><a href="#" class="sorting">Stage</a></div>
                    <div class="tableCell year"><a href="#" class="sorting">Year</a></div>
                    <div class="tableCell clientAction"></div>
                </div>
                @foreach (var item in Model.ClientList)
                {
                    if (item.ClientType == "Seller")
                    {
                        <div class="tableRow">
                            @*<a target="_blank" href="@Url.Action("ClientDetails", "DealAgent", new { ClientID = item.ClientID, area = "Coordinator" })" class="table_ank">*@
                            <a target="_blank" href="@Url.Action("Seller", "DealTrackerV2", new {TransactionID=item.TransactionID, ClientID = item.ClientID, area = "Coordinator" })" class="table_ank">

                                <div class="tableCell type">@item.ClientType</div>
                                <div class="tableCell agentName">@item.AgentName</div>
                                <div class="tableCell addrees">
                                    <p>
                                        @*<a href="/Coordinator/DealAgent/ClientDetails?ClientID=@item.ClientID">*@
                                        @item.Address
                                        @*</a>*@
                                    </p>
                                </div>
                                <div class="tableCell stage">@item.Stage</div>
                                <div class="tableCell year">@item.Year</div>
                            </a>
                            <div class="tableCell clientAction">
                                <form method="post" action="@Url.Action("DeleteTransaction",  new { TransactionID = item.TransactionID , clientId= item.ClientID, AgentId=@ViewBag.AgentID, area = "Coordinator"})" data-kw-ajax="true" data-kw-target="#addNewTrans">

                                    <a href="@Url.Action("DeleteTransaction", new { TransactionID = item.TransactionID , clientId=item.ClientID,AgentId=@ViewBag.AgentID,area = "Coordinator"})" class="deleteTransaction actioDelete" data-toggle="tooltip" title="Delete" data-transactionid="@item.TransactionID" data-clientid="@item.ClientID">
                                        <i class="material-icons">delete</i>
                                    </a>
                                </form>
                            </div>
                            @*<div class="tableCell clientAction"><a href="#" class="actioDelete"><i class="material-icons">delete</i></a></div>*@
                            @*<a href="@Url.Action("Delete", new { TransactionID = item.TransactionID , clientId= Model.UserProfile.ClientID,AgentId=@ViewBag.AgentID,area = "Coordinator"})" class="deleteTransaction pull-right" data-toggle="tooltip" data-placement="bottom" title="Delete" data-transactionid="@item.TransactionID">
                            <i class="fa fa-trash" style="font-size:16px;"></i>
                        </a>*@
                        </div>

                    }
                    else
                    {
                        <div class="tableRow">
                            <a target="_blank" href="@Url.Action("Buyer", "DealTrackerV2", new {TransactionID=item.TransactionID, ClientID = item.ClientID, area = "Coordinator" })" class="table_ank">

                                <div class="tableCell type">@item.ClientType</div>
                                <div class="tableCell agentName">@item.AgentName</div>
                                <div class="tableCell addrees">
                                    <p>
                                        @*<a href="/Coordinator/DealAgent/ClientDetails?ClientID=@item.ClientID">*@
                                        @item.Address
                                        @*</a>*@
                                    </p>
                                </div>
                                <div class="tableCell stage">@item.Stage</div>
                                <div class="tableCell year">@item.Year</div>
                            </a>

                            <div class="tableCell clientAction">
                                <form method="post" action="@Url.Action("DeleteTransaction",  new { TransactionID = item.TransactionID , clientId= item.ClientID, AgentId=@ViewBag.AgentID, area = "Coordinator"})" data-kw-ajax="true" data-kw-target="#addNewTrans">

                                    <a href="@Url.Action("DeleteTransaction", new { TransactionID = item.TransactionID , clientId=item.ClientID,AgentId=@ViewBag.AgentID,area = "Coordinator"})" class="deleteTransaction actioDelete" data-toggle="tooltip" title="Delete" data-transactionid="@item.TransactionID" data-clientid="@item.ClientID">
                                        <i class="material-icons">delete</i>
                                    </a>
</form>
</div>
                        </div>
                    }
                }
            </div>
        </div>
        @*<div class="pagination-row ns-grid-pager" data-kw-target="#DataGrid">
            <div class="row">
                <div class="col-sm-12 col-md-3">
                    <div class="rowsPerPage">
                        @Model.PagingInfo.TotalItems &nbsp;Record(s)
                    </div>
                </div>
                <div class="col-sm-12 col-md-9">
                    <div class="pageNavigation ns-pagination" data-kw-target="#DataGrid" data-kw-actionlink="/useragentnew/list">
                        @Html.PageLinksNew(Model.PagingInfo, x => Url.Action("list", "useragentnew", new { PageNo = x, PageSize = Model.PagingInfo.ItemsPerPage, sortOrder = Model.UserSortingInfo.CurrentSort, searchterm = Model.UserListFiterInfo.SearchFilter, year = Model.UserListFiterInfo.YearFilter, type = Model.UserListFiterInfo.TypeFilter, stage = Model.UserListFiterInfo.StageFilter }))
                    </div>
                </div>
            </div>
        </div>*@
    </div>
    }
    else
    {
        <div class="clients-list-inner addNewTrans">
            <h3 class="heading">
                Transactions
                <a href="#" class="btn tealButton" data-toggle="modal" data-target="#addNewTransModal">Add New</a>
            </h3>

            <div class="table-wrapper">
                <div class="listing-table custom-table">
                    <p style="text-align:center">No record found..</p>
                </div>

            </div>
            </div>
            }
        </div>

<div class="modal fade add-vendor-modal" id="addNewTransModal" tabindex="-1" role="dialog" aria-labelledby="addNewTransModalLabel" style="padding-right: 8px;" aria-modal="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewTransModalLabel">Add Transaction</h5>
            </div>
            <div class="modal-body">
               @using (Ajax.BeginForm("createtransaction", "UserAgentNew", null, new AjaxOptions() { HttpMethod = "POST" }, new { enctype = "multipart/form-data", id = "transactionform",@disabled="disabled" }))
               {
                @Html.HiddenFor(model => model.utblMstTrackDealMasters.AgentID, new { Value = ViewBag.AgentID })
                <div class="form-group">
                  
                    <div class="form-control-group">
                        <label class="text-danger" id="lblErrorTrans" style="display:none"></label>
                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.utblMstTrackDealMasters.ClientID)
                        <div class="form-control-group">
                            <input type="text" value="@ViewBag.ClientDeatils" class="form-control" disabled/>
                            @Html.DropDownListFor(model => model.utblMstTrackDealMasters.ClientID, new SelectList(Model.ClientDropDown, "Id", "ClientName"), "--- Select Client --- ", new { @class = "form-control drop-change ddl-select2",@style="display:none"  })
                            @Html.ValidationMessageFor(m => m.utblMstTrackDealMasters.ClientID)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.utblMstTrackDealMasters.ClientTypeID)
                        <div class="form-control-group">
                            @Html.DropDownListFor(model => model.utblMstTrackDealMasters.ClientTypeID, new SelectList(Model.ClientTypeDropDown, "ClientTypeID", "ClientType"), "--- Select Transaction --- ", new { @class = "form-control drop-change ddl-select2" })
                            @Html.ValidationMessageFor(m => m.utblMstTrackDealMasters.ClientTypeID)
                        </div>
                    </div>
                    if (User.IsInRole("Admin"))
                    {
                        @*<div class="form-group col-sm-6" id="divAgent">
                            <label>Agent</label>
                            <input type="text" class="form-control" id="txtAgent" />

                            @Html.HiddenFor(m => m.utblMstTrackDealMasters.AgentID)
                            @Html.ValidationMessageFor(m => m.utblMstTrackDealMasters.AgentID)
                        </div>*@

                        <div class="form-group" id="divAgent">
                            <label>Agent</label>
                            <div class="form-control-group">
                                <input type="text" class="form-control" id="txtAgent" />
                                @Html.HiddenFor(m => m.utblMstTrackDealMasters.AgentID)
                                @Html.ValidationMessageFor(m => m.utblMstTrackDealMasters.AgentID)
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.utblMstTrackDealMasters.Address)
                        <div class="form-control-group">
                            @Html.TextBoxFor(model => model.utblMstTrackDealMasters.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.utblMstTrackDealMasters.Address)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.utblMstTrackDealMasters.Description)
                        <div class="form-control-group">
                            @Html.TextBoxFor(model => model.utblMstTrackDealMasters.Description, new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.utblMstTrackDealMasters.Description)
                        </div>
                    </div>
                    <div class="btn-wrap">
                        <button type="button" class="btn tealButton" id="btnSaveAddTrans" data-kw-target="#DealsDataGrid">Save</button>
                        <button type="button" class="btn greyButton" data-dismiss="modal"  >Close</button>
                    </div>
               }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('#utblMstTrackDealMasters_ClientID').val($("#txtClientId").val())
        $('#utblMstTrackDealMasters_ClientTypeID').on('change', function () {
            var ClientType = "Buyer"
            var DDLText = document.getElementById("utblMstTrackDealMasters_ClientTypeID").options[document.getElementById('utblMstTrackDealMasters_ClientTypeID').selectedIndex].text;
            if (ClientType == DDLText) {
                $("#utblMstTrackDealMasters_Address").attr('disabled', 'disabled');
                $("#utblMstTrackDealMasters_Address").val("");
                $("#MstClosingConfig_utblMstClosingDate_MLSID").removeAttr('disabled');

            }
            else if ("Seller" == DDLText) {

                $("#utblMstTrackDealMasters_Address").val("");
                $("#utblMstTrackDealMasters_Address").removeAttr('disabled');

            }
            else {
                $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
                $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
                $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
            }

        });
    });

</script>

<script>
    $(document).ready(function () {

        
        var ClientType = "Buyer"
        var DDLText = document.getElementById("utblMstTrackDealMasters_Address").options[document.getElementById('utblMstTrackDealMasters_Address').selectedIndex].text;
        if (ClientType == DDLText) {
            $("#utblMstTrackDealMasters_Address").attr('disabled', 'disabled');
            $("#utblMstTrackDealMasters_Address").val("");
            $("#MstClosingConfig_utblMstClosingDate_MLSID").removeAttr('disabled');

        }
        else if ("Seller" == DDLText) {

            $("#utblMstTrackDealMasters_Address").val("");
            $("#utblMstTrackDealMasters_Address").removeAttr('disabled');

        }
        else {
            $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
            $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
            $("#utblMstTrackDealMasters_Address").removeAttr('disabled');
        }


    });
    $('#btnSaveAddTrans').click(function () {
        var res = validateTransaction();
        if (res == false) {
            return false;
        }
        var form = $('#transactionform')[0];
        var dataString = new FormData(form);
        $.ajax({
            url: '/UserAgentNew/CreateTransaction',
            data: dataString,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (result) {
                if (result.success) {
                    $('#addNewTransModal').modal('hide');
                    $('#lblErrorTrans').css('display', 'none')
                    //var TargetURL = '/useragentnew/DealList?id=' + $('#txtClientId').val();
                    //var options = {
                    //    url: TargetURL
                    //    , type: "get"
                    //}
                    //var target = $('#btnSaveAddTrans').attr("data-kw-target");
                    //alert(target)
                    //$.ajax(options).done(function (data) {
                    //    $(target).replaceWith(data);
                    //});

                    location.reload(true);
                }
                else {

                    $('#lblErrorTrans').css('display', 'block')
                    $('#lblErrorTrans').text(result)
                }


            },
            error: function (errormessage) {
                $('#lblErrorTrans').css('display', 'block');
                $('#lblErrorTrans').text('Sorry, Something went wrong. Please try again.');
           
            }
        });
    });
    function DeleteTransaction(TransactionID,clientId) {
       
        $.ajax({
            url: '/UserAgentNew/DeleteTransaction?TransactionID='+TransactionID+'&clientId='+clientId,
      
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (result) {
                    location.reload(true);
               


            },
            error: function (errormessage) {
                alert('Sorry, Something went wrong. Please try again.');
            }
        });
    };
    function validateTransaction() {
        var isValid = true;
        if ($('#utblMstTrackDealMasters_ClientID').val().trim() == "") {
            $('#utblMstTrackDealMasters_ClientID').css('border', '1px solid #EB5757')
            isValid = false;
        }
        else {
            $('#utblMstTrackDealMasters_ClientID').css('border', '1px solid #ced4da')
        }
        if ($('#divAgent').is(':visible')) {
            if ($('#txtAgent').val().trim() == "") {
                $('#txtAgent').css('border', '1px solid #EB5757')
                isValid = false;
            }
            else {
                $('#txtAgent').css('border', '1px solid #ced4da')
            }
        }
        if ($('#utblMstTrackDealMasters_ClientTypeID').val().trim() == "") {
            $('#utblMstTrackDealMasters_ClientTypeID').css('border', '1px solid #EB5757')
            isValid = false;
        }
        else {
            $('#utblMstTrackDealMasters_ClientTypeID').css('border', '1px solid #ced4da')
        }


        if ($('#utblMstTrackDealMasters_Description').val().trim() == "") {
            $('#utblMstTrackDealMasters_Description').css('border', '1px solid #EB5757')
            isValid = false;
        }
        else {
            $('#utblMstTrackDealMasters_Description').css('border', '1px solid #ced4da')
        }



        return isValid;
    }

    $('#txtAgent').autocomplete({
        source: function (request, response) {
            var itemnamecodes = new Array();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AutocompleteAgent", "Deals", new { area = "Admin" })',
                dataType: 'json',
                data: { term: request.term },
                success: function (data) {

                    response($.map(data, function (item) {
                        return { label: item.Key, Id: item.Value };
                    }))
                }
            })
        },
        select: function (e, i) {
            $("#utblMstTrackDealMasters_AgentID").val(i.item.Id);

        }
    });

</script>