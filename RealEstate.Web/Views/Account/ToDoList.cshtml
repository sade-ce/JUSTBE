@model RealEstate.Entities.ViewModels.ClientToDoListViewModel
@{
    ViewBag.Title = "Just BE | To Do List";
    ViewBag.ViewHeader = "To Do List";

    if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        Layout = "~/Views/Shared/_LayoutCommon.cshtml";

    }
    else
    {

        Layout = "~/Areas/Client/Views/Shared/_ClientLayout.cshtml";

        <style>
            .dashboard-header h1 {
                line-height: 37px;
            }
        </style>

    }

}





<style>
    /* Include the padding and border in an element's total width and height */
    * {
        box-sizing: border-box;
    }

    /* Remove margins and padding from the list */
    .ultodolist {
        margin: 0;
        padding: 0;
    }

        /* Style the list items */
        .ultodolist li {
            cursor: pointer;
            position: relative;
            padding: 12px 8px 12px 40px;
            background: #eee;
            font-size: 18px;
            transition: 0.2s;
            /* make the list items unselectable */
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
                list-style-type: none;
        }

            /* Set all odd list items to a different color (zebra-stripes) */
            .ultodolist li:nth-child(odd) {
                background: #f9f9f9;
            }

            /* Darker background-color on hover */
            .ultodolist li:hover {
                background: #ddd;
            }

            /* When clicked on, add a background color and strike out text */
            .ultodolist li.checked {
                background: #888;
                color: #fff;
                text-decoration: line-through;
            }

                /* Add a "checked" mark when clicked on */
                .ultodolist li.checked::before {
                    content: '';
                    position: absolute;
                    border-color: #fff;
                    border-style: solid;
                    border-width: 0 2px 2px 0;
                    top: 10px;
                    left: 16px;
                    transform: rotate(45deg);
                    height: 15px;
                    width: 7px;
                }

    /* Style the close button */
    .todoclose {
        position: absolute;
        right: 0;
        top: 0;
        padding: 12px 16px 12px 16px;
    }

      




 
</style>


<div class="main-wrapper">
    <div class="main">
        <div class="main-inner">

            <div class="content-title">
                <div class="content-title-inner">
                    <div class="container">
                        <h1>To Do List</h1>

                    </div><!-- /.container -->
                </div><!-- /.content-title-inner -->
            </div><!-- /.content-title -->

            <div class="content">
                <div class="container">
                    <!-- /.filter -->

                    <div class="row">

                        <div class="col-md-12 col-lg-12">

                            <div class="content">




                                <div class="container">
                                    <!-- /.filter -->

                                    <div class="row">

                                        <div class="listing-detail col-md-12 col-lg-12">
                                            <div class="listing-contact-form">
                                                <div class="row">
                                                    <form id="FormUpload" method="post" class="form-horizontal">
                                                        <div class="form-group" id="divMyToDoList">
                                                            <div class="col-md-12">
                                                                <label class="text-danger" id="lblError" style="display:none"></label>
                                                            </div>
                                                            <div class="col-md-12">
                                                                <label class="text-danger" id="lblTask" style="display:none">This is required</label>
                                                            </div>
                                                            <div class="col-md-8">
                                                                <input type="text" id="txtTask" placeholder="Type here" name="Task" class="form-control">

                                                            </div>
                                                            <div class="col-md-4">

                                                                <input onclick="return AddToDoList()" class="btn btn-primary" type="button" value="Add" />
                                                            </div>
                                                        </div>

                                                    </form>

                                                </div>



                                                <div class="row"> 
                                                 @*<ul id="myToDoList" class="ultodolist col-md-12" >

                                                 </ul>*@
                                                  <table id="myToDoList" class="ultodolist col-md-12"></table>
                                                    </div>
                                            </div>
                                            <!-- /.row -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                    <!-- /.row -->
                </div><!-- /.container -->
            </div><!-- /.content -->
        </div><!-- /.main-inner -->
    </div><!-- /.main -->
</div>





<script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>
<script>

    var ClientId = getParameterByName('ClientId');
    function getParameterByName(name) {
        var regexS = "[\\?&]" + name + "=([^&#]*)",
      regex = new RegExp(regexS),
      results = regex.exec(window.location.search);
        if (results == null) {
            return "";
        } else {
            return decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    }


    $(document).ready(function () {
        clearTextBox();
        loadData();
    });

    function loadData() {
        $.ajax({
            url: "/Account/BindToDoList",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                var html = '';
                $.each(result, function (key, item) {
                   // html += '<tr>'
                    if (item.IsDone == false) {
                        html += '<li class="todoLI"   onclick="MarkAsRead(' + item.Id + ',' + true + ')">'
                    }
                    else {
                        html += '<li  onclick="MarkAsRead(' + item.Id + ',' + false + ')" class="todoLI checked">'
                    }

                    html += item.Task
                   // html += '</li>'
                    html += '<span class="todoclose" style="cursor:pointer" onclick="DeleleToDoList(' + item.Id + ')"><img src="/img/delete-doc.png"/></span></li>';
                //    html += '</tr>'
                });

                $('#myToDoList').html(html);
            },
            error: function (errormessage) {
                alert('Sorry, Something went wrong. Please try again.');
            }
        });
    }

    //Add Data Function
    function AddToDoList() {
        var res = validate();
        if (res == false) {
            return false;
        }
        var form = $('#FormUpload')[0];
        var dataString = new FormData(form);
        $.ajax({
            url: "/Account/AddToDoList",
            data: dataString,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (result) {
                //    alert(result) remove alert
                if (result == "0") {
                    loadData();
                    clearTextBox();
                }
                else {
                    $('#lblError').css('display', 'block')
                    $('#lblError').text(result)
                }


            },
            error: function (errormessage) {
                $('#lblError').css('display', 'block');
                $('#lblError').text('Sorry, Something went wrong. Please try again.');
            }
        });
    }


    //function for deleting employee's record
    function DeleleToDoList(ID) {
        //var ans = confirm("Are you sure you want to delete this record?");
        //if (ans) {
            //  var ID = $(this).attr("data-Id")
            $.ajax({
                url: "/Account/DeleteTask/" + ID,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadData();
                    clearTextBox();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
       // }
    }


    //function for deleting employee's record
    function MarkAsRead(ID, IsDone) {
        //var ans = confirm("Are you sure you want to mark this done?");
        //if (ans) {
            //  var ID = $(this).attr("data-Id")
            //  var IsDone = $(this).attr("data-IsDone")
            $.ajax({
                url: "/Account/MarkAsDone?ID=" + ID + "&IsDone=" + IsDone,
                // data: { ID: ID, IsDone: IsDone },
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadData();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        //}
    }

    //Function for clearing the textboxes
    function clearTextBox() {
        $('#txtTask').val("");
        $('#lblError').css('display', 'none')
        $('#lblTask').css('display', 'none')
    }
    //Valdidation using jquery
    function validate() {
        var isValid = true;
        if ($('#txtTask').val().trim() == "") {
            $('#lblTask').css('display', 'block');
            isValid = false;
        }
        else {
            $('#lblTask').css('display', 'none');
        }



        return isValid;
    }


    // Add a "checked" symbol when clicking on a list item
    //var list = document.querySelector('.ultodolist');
    //list.addEventListener('click', function (ev) {
    //    if (ev.target.tagName === 'LI') {
    //        ev.target.classList.toggle('checked');
    //    }
    //}, false);



</script>
