!function(r){if(!r.ocErrLog){Array.prototype.indexOf||(Array.prototype.indexOf=function(r){for(var o=0,e=this.length;o<e;o++)if(this[o]==r)return o;return-1}),r.ocErrLog={};var o={};o.parseURL=function(r){var o={href:r},e=r.replace("//","/").split("/");return o.protocol=e[0],e.length>1&&(o.host=e[1],e[1]=e[1].split(":"),o.hostname=e[1][0],o.port=e[1].length>1?e[1][1]:"",e.splice(0,2),o.pathname="/"+e.join("/"),o.pathname=o.pathname.split("#"),o.hash=o.pathname.length>1?"#"+o.pathname[1]:"",o.pathname=o.pathname[0],o.pathname=o.pathname.split("?"),o.search=o.pathname.length>1?"?"+o.pathname[1]:"",o.pathname=o.pathname[0]),o},o.matchMsg=function(r,o){return new RegExp("("+o.join("|")+")").test(r)},o.matchDomains=function(r,o){return new RegExp("("+o.join("|").replace(/\./g,"\\.").replace(/\*/g,"\\w+")+")").test(r)},ocErrLog.debugMode=!1,ocErrLog.url="",ocErrLog.domainIgnore=new Array,ocErrLog.domainWhitelist=new Array("online-convert"),ocErrLog.msgIgnore=new Array("IN is not defined","'IN' is undefined","ReferenceError: Can't find variable: IN","MyIPhoneApp","not an object \\(evaluating"),ocErrLog.msgCors=new Array("Script Error","Script Error.","Script error.","Script error"),ocErrLog.logToConsole=!1,ocErrLog.ignoreCrossOriginErrors=!0,ocErrLog._had_errors=!1,ocErrLog.trapErrors=!1,ocErrLog.fnPreviousOnErrorHandler=r.onerror,r.onerror=function(r,o,e,n,t){try{ocErrLog.logOnErrorEvent(r,o,e,n,t)}catch(a){var g={log_type:"window-on-error",log_level:300,message:"Error while processing window.onerror!"};a.message&&(log.exception_message=a.message),ocErrLog.sendLogInternal(g)}return"function"==typeof ocErrLog.fnPreviousOnErrorHandler&&ocErrLog.fnPreviousOnErrorHandler(r,o,e,n),ocErrLog.trapErrors},ocErrLog.logOnErrorEvent=function(r,e,n,t,g){if(ocErrLog.domainWhitelist.length>0&&!1===o.matchDomains(e,ocErrLog.domainWhitelist))return void console.log("ocErrLog - report ignored because "+e+" did not match the whitelist");if(ocErrLog.domainIgnore.length>0&&!0===o.matchDomains(e,ocErrLog.domainIgnore))return void console.log("ocErrLog - report ignored because "+e+" matched the blacklist");if(ocErrLog.msgIgnore.length>0&&!0===o.matchMsg(r,ocErrLog.msgIgnore))return void console.log("ocErrLog - report ignored because "+r+" matched the blacklist");if(ocErrLog.ignoreCrossOriginErrors&&ocErrLog.msgCors.length>0&&!0===o.matchMsg(r,ocErrLog.msgCors))return void console.log("ocErrLog - cross origin script error ignored because no additional error info supplied.");var a="Error found in page: "+e+"\nat line number:"+n+"\nError Message:"+r;if(ocErrLog.logToConsole&&console.log(a),ocErrLog.debugMode)return void alert("ocErrLog caught an error\n--------------\n"+a);var c={log_type:"window-on-error",log_level:300,message:r,file_url:e,line_number:n,column_number:t};g&&g.stack&&(c.error_stack=g.stack),g&&g.fileName&&(c.error_file_name=g.fileName),ocErrLog.sendLog(c)},ocErrLog.logStatusFe=function(r,o,e){var n={log_type:"ocfe-status",log_level:o,message:r};$.extend(n,e),ocErrLog.sendLog(n)},ocErrLog.sendLog=function(r){try{ocErrLog.sendLogInternal(r)}catch(o){ocErrLog.sendLogErrorHandler(o)}},ocErrLog.sendLogInternal=function(r){$.ajax({dataType:"json",url:"https://www."+domain+"/ajax_logger",method:"POST",data:{data:r},xhrFields:{withCredentials:!1}}).done(function(){ocErrLog.logToConsole&&console.log("transmitted error log")})},ocErrLog.sendLogErrorHandler=function(r){ocErrLog._had_errors=!0;var o="ocErrLog encountered an unexpected error.\n\nDescription: "+r.description;ocErrLog.debugMode?alert(o):console.log(o)},ocErrLog.errorTrap=function(r,o,e,n){ocErrLog.logOnErrorEvent(r,o,e,n)}}}(window);