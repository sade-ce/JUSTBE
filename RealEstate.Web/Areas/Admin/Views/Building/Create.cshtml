@model RealEstate.Entities.ViewModels.BuildingViewModel
@{
    ViewBag.Title = "Building";
    Layout = "~/Areas/Admin/Views/Shared/_RealEstate.cshtml";
    if (User.IsInRole("Agent"))
    {
        Layout = "~/Areas/Coordinator/Views/Shared/_AgentLayout.cshtml";

    }
}
<style>
    .td-text-center {
        text-align: center;
    }
</style>
<section class="content-header">
    <h1>
        Building
        <small>Create New </small>
    </h1>
</section>
<div class="col-md-12">
    <section class="content">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title text-center">Create Building</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Ajax.BeginForm("Create", "Building", null, new AjaxOptions() { HttpMethod = "POST" }, new { @class = "form-horizontal", id = "myform" }))
            { @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="box-body">
                    <div class="row">
                        <div class="col-md-9">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Building.Name, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Building.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Building.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-4 control-label">Neighborhood</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Building.Neighborhood_Id, new SelectList(Model.NeighborhoodDDL, "Neighborhood_Id", "Name"), "--- Select Neighborhood --- ", new { @class = "form-control ddl-select2" })
                                    @Html.ValidationMessageFor(model => model.Building.Neighborhood_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-4 control-label">Address</label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Building.Address, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-4 control-label">Number Of Units</label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Building.NumberOfUnits, new { @class = "form-control numeric" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-4 control-label">Front Desk Phone</label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Building.FrontDeskPhone, new { @id = "Building_Phone", @class = "form-control", @placeholder = "###.###.####", @maxlength = "12" })
                                    @Html.ValidationMessageFor(model => model.Building.FrontDeskPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>


                         
                            <div class="form-group">
                                <label class="col-md-4 control-label">Features</label>
                                <div class="col-md-8">
                                    <table class="table table-striped table-condensed table-bordered table-responsive">
                                        <thead>
                                            <tr>
                                                <th class="text-center" style="vertical-align: middle;">

                                                </th>

                                                <th class="text-center" style="vertical-align: middle;">
                                                    Yes
                                                </th>
                                                <th class="text-center" style="vertical-align: middle;">
                                                    No
                                                </th>
                                                @*<th class="text-center" style="vertical-align: middle;">
                                                    
                                                </th>*@
                                            </tr>
                                        </thead>
                                        <tbody>
                                                @for (int i = 0; i < Model.RulesDropDown.Count(); i++)
                                                {
                                                <tr>
                                                    <td>@Html.DisplayFor(m => m.RulesDropDown[i].Name)</td>
                                                    <td class="td-text-center">@Html.CheckBoxFor(m => m.RulesDropDown[i].IsChecked, new { @class = "radio-check-prev" })
                                                    @Html.HiddenFor(m => m.RulesDropDown[i].Rule_Id)</td>
                                                    <td class="td-text-center"><input class="radio-check-next" type="checkbox" /></td>
                                                    @*<td class="td-text-center"><i class="fa fa-minus-circle clearSelection" aria-hidden="true" style="cursor:pointer"></i></td>*@
                                                </tr>
                                            }
                                    </table>
                                 
                                </div>
                            </div>
                       
                           

                        </div>

                    </div>
                </div>
                <div class="box-footer">
                    @Html.ActionLink("Back to List", "list", null, new { @class = "btn btn-default pull-left" })
                    <input type="submit" value="Save Changes" class="btn btn-primary pull-right" />
                    <div class="clearfix"></div>
                </div>
                <div class="modal fade" id="myHelpModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 class="modal-title" id="myModalLabel"></h4>
                            </div>
                            <div class="modal-body" id="message">

                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }


          




</div>




    </section>
</div>

@*error message*@
<div id="ErrMsg" style="display:none;">
    <input type="hidden" id="ErrMsgHiddenField" name="ErrMsg" value="@TempData["ErrMsg"]" />
</div>
@section Scripts
{

    <script>
        $(document).on("input", ".numeric", function () {
            this.value = this.value.replace(/\D/g, '');
        });
        $(document).ready(function () {

            $('.radio-check-prev').change(function () {

                if ($(this).is(':checked')) {
                    $(this).parent('td').next('td').find('input').prop('checked', false);
                }
            })
            $('.radio-check-next').change(function () {

                if ($(this).is(':checked')) {
                    $(this).parent('td').prev('td').find('input').prop('checked', false);

                }
            })

            $('.clearSelection').click(function () {
                $(this).parent('td').parent('tr:has(td)').find('input[type="checkbox"]').prop('checked', false);
            })
        });
        $("#myform").submit(function (e) {
            $("#ajaxLoading").css("display", "block");
            $("#ajaxLoading").css("top", $(window).height() / 1.8);
            $("#ajaxLoading").css("left", $(window).width() / 2);
            $("#ajaxLoading").css("position", "fixed");
            $("#ajax-backdrop").css("display", "block");
        });
    </script>
    <script>
        $('#Building_Phone').keydown(function (e) {
            var key = e.which || e.charCode || e.keyCode || 0;
            $phone = $(this);

            // Don't let them remove the starting '('


            // Auto-format- do not expose the mask as the user begins to type
            if (key !== 8 && key !== 9) {
                if ($phone.val().length === 3) {
                    $phone.val($phone.val() + '.');
                }
                if ($phone.val().length === 7) {
                    $phone.val($phone.val() + '.');
                }

            }

            // Allow numeric (and tab, backspace, delete) keys only
            return (key == 8 ||
                    key == 9 ||
                    key == 46 ||
                    (key >= 48 && key <= 57) ||
                    (key >= 96 && key <= 105));
        })

          .bind('focus click', function () {
              $phone = $(this);


          })

          .blur(function () {
              $phone = $(this);


          });
    </script>





}

<style>
    .form-horizontal .control-label {
        padding-top: 0px;
        margin-bottom: 13px;
        text-align: right;
        margin-top: 12px;
    }
</style>