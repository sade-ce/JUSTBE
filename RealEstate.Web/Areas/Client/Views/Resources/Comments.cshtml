@model RealEstate.Entities.ViewModels.CommentsViewModel
@using System.Security.Claims;
@{
    ViewBag.Title = "Comments";
    //Layout = "/Views/Shared/_LayoutCommonNew.cshtml";
    Layout = "~/Areas/Client/Views/Shared/_ClientLayoutNew.cshtml";
    if (User.IsInRole("Agent") || User.IsInRole("Admin"))
    {
        Layout = "/Views/Shared/_LayoutCommonNew.cshtml";

    }
}

<style>
    .commentBtnP {
        background: #0bb7a5;
        font-size: 12px;
        letter-spacing: 0.2px;
        line-height: 22px;
        color: #f6f7f8;
        height: 34px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 4px 20px;
        border-radius: 6px;
        font-weight: 700;
    }
    .commentTextWrap img {
max-width: 100%;
height: auto;
}

    .mce-content-body img {
max-width: 100%;
height: auto;
}

    .commentTextWrap iframe{
max-width: 100%;
height: auto;
    }

  
</style>
@section Scripts
{

    <script src="https://cdn.tiny.cloud/1/g88rvlu83u2wh3fmarmynpc5jbrf3cw43yo49xlwsw9p25q7/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>


    @*<script src="https://justbere-d4d9.kxcdn.com/Content/Plugins/ckeditor/ckeditor.js"></script>
        <script src="https://justbere-d4d9.kxcdn.com/Content/Plugins/ckeditor/adapters/jquery.js" async></script>*@


    <script type="text/javascript">
        $.urlParam = function (name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)')
                              .exec(window.location.href);
            if (results == null) {
                return 0;
            }
            return results[1] || 0;
        }

        $('div.modal').on('show.bs.modal', function (event) {
            let modal = $(this);
            modal.addClass('d-block'); // Boostrap class for display-block
        });
        $('div.modal').on('hide.bs.modal', function (event) {
            let modal = $(this);
            modal.removeClass('d-block');
        });



        //       $(document).ready(function () {
        //           CKEDITOR.config.toolbar = 'Basic';
        //           CKEDITOR.config.toolbar_Basic =
        //[
        //    ['Bold', 'Italic', 'Underline', 'Link', 'Unlink', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat', 'BulletedList', 'NumberedList', 'Blockquote', 'Table', 'Image', 'Flash']
        //];
        //           //CKEDITOR.config.extraPlugins = [
        //           //    ['html5video','widget','widgetselection','clipboard','lineutils']
        //           //];
        //           CKEDITOR.replace("txtDescription");
        //           //CKEDITOR.replace("txtDescription1");
        //           //, { htmlEncodeOutput: true }
        //        //   CKEDITOR.config.removePlugins = 'save';


        //       });
    </script>




    <script>
        //tinymce.init({
        //    mode: "textareas",
        //    theme: "advanced"
        //});

        //tinymce.init({
        //    selector: "textarea",  // change this value according to your HTML
        //    plugins: "media",
        //    menubar: "insert",
        //    toolbar: "media"
        //});
        // tinymce.init({
        //    selector: 'textarea',
        //    branding: false,
        //  //plugins: 'a11ychecker advcode casechange formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinycomments tinymcespellchecker media',
        //  //toolbar: 'a11ycheck addcomment showcomments casechange checklist code formatpainter pageembed permanentpen table media',
        //  //toolbar_mode: 'floating',
        //  //tinycomments_mode: 'embedded',
        //    //tinycomments_author: 'Author name',
        //    plugins: "image media save",
        //    menubar: "insert",
        //    toolbar: "image media save",


        //});

        tinymce.init({
            selector: 'textarea',
            //init_instance_callback: function (e) {
            //    alert();
            //    tinymce.activeEditor.focus();
            //    // e.execCommand('mceAutoResize');
            //},
            menubar: true,
            plugins: [
              'advlist autolink lists link image imagetools media charmap print preview anchor',
              'searchreplace visualblocks advcode fullscreen',
              'insertdatetime media table contextmenu powerpaste tinymcespellchecker a11ychecker save'
            ],
            mobile: {
                //menubar: true,
                plugins: [ 'autosave', 'lists', 'autolink' ],
                theme: 'mobile'
            },
            toolbar: 'undo redo | insert | styleselect | bold italic forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image media ',
            //toolbar: 'undo redo | insert | styleselect | bold italic forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link ',
            height:"270",
            //powerpaste_allow_local_images: true,
            //powerpaste_word_import: 'prompt',
            //powerpaste_html_import: 'prompt',
            spellchecker_language: 'en',
            spellchecker_dialog: true,
            images_upload_url: "@Url.Action("UploadImage", "Resources")",
            setup: function(editor) {
                editor.on('KeyDown', function (e) {

                    if ((e.keyCode == 8 || e.keyCode == 46) && editor.selection) { // delete & backspace keys

                        var selectedNode = editor.selection.getNode(); // get the selected node (element) in the editor

                        if (selectedNode && selectedNode.nodeName == 'IMG') {
                            var str = selectedNode.src;
                            var lastSlash = str.lastIndexOf("/");
                            DeleteImage(str.substring(lastSlash + 1)); // A callback that will let me invoke the deletion of the image on the server if appropriate for the image source.
                        }
                    }
                });
            },
            
            automatic_uploads: true,
            imagetools_toolbar: "rotateleft rotateright | flipv fliph | editimage imageoptions",
            paste_data_images: true,
            image_dimensions: false,
            media_dimensions: false,
            media_poster: false,
            media_alt_source: false,
            branding: false,
           
       

            //mediauploader_upload_file: function (widget, file, callback) {
            //    widget.innerHTML = 'Uploading...';

            //    // Do your upload logic here instead of setTimeout

            //    setTimeout(function () {

            //        callback('https://pbs.twimg.com/profile_images/2221189782/beavis_butthead.jpg');
            //    }, 2500);
            //}
            //Save button call back function
            //save_onsavecallback: function () {
            //    var content = tinymce.activeEditor.getContent();
            //    console.log(content);
            //}
        });

        
    </script>

}
@if ((User.IsInRole("Client")))
{
<div class="top-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <div class="breadcrumbs">
                    <ul class="align-items-center d-flex list-unstyled m-0 p-0">
                        <li class="d-none d-lg-block mr-4">
                           
                                <a href="#!" id="toggleHeader"><img src="~/Content/NewVersion/images/ham.png" alt="" class="img-fluid"></a>
                            
                        </li>
                        @*<li>My Account<span>&nbsp;>&nbsp;</span></li>
                            <li class="active">Edit Profile<span>&nbsp;>&nbsp;</span></li>*@
                        <li>
                            <a class="nav-link nav-cal-drop nav-cal-drop-new dropdown-toggle " href="@Url.Action("Index", "Resources", new { area = "Client" })" role="button">Resources<span style="color:#212529">&nbsp;>&nbsp;</span></a>
                        </li>
                        @*<li class="no-activee">@ViewBag.ResourceTitle</li>*@
                    </ul>
                </div>
            </div>
            <div class="col-md-6 d-md-block d-none">
                <div class="accountLog d-flex justify-content-end align-items-center">
                    <p>Hello, &nbsp;<span>@(((ClaimsIdentity)User.Identity).FindFirst("FirstCustomName").Value)</span></p>
                    <div class="profileImgtop" style="background-size: cover; background-position: center;   height:50px;">
                        <!-- <img alt="profile-img" id="profileimg" class="img-fluid profileimg"> -->
                    </div>                                                   
                        <span> &nbsp; &nbsp; | &nbsp; </span>

                        <div class="dropdown">
                            <button class="btn  dropdown-toggle mybtn" type="button" id="dropdownMenuButton" data-toggle="dropdown"
                                    aria-haspopup="true" aria-expanded="false">
                                My Account
                            </button>
                            <div class="dropdown-menu MyAccountDrop" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" href="@Url.Action("EmailPreferences", "Account", new { @area = "" })"><i class="flaticon-gear"></i>Notification Settings</a>
                                <a class="dropdown-item" href="@Url.Action("EditProfile", "Account", new { @area = "" })"><i class="flaticon-conversation"></i>Edit Profile</a>
                                <a class="dropdown-item" href="@Url.Action("ChangePassword", "Account", new { @area = "" })"><i class="flaticon-password"></i>Change Password</a>

                                @using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <a class="dropdown-item" href="javascript:document.getElementById('logoutForm').submit()"><i class="flaticon-logout"></i>Logout</a>

                                }
                            </div>
                        </div>
                  
                </div>

            </div>
        </div>
    </div>
</div>
}
<section class="blogPageWrapper">
    <div class="container">
        <div class="blogContentContainer">
            <h3>@ViewBag.LinkTitle</h3>
            <div class="blogBannerWrap"></div>
            <div class="total-comments"><img src="/img/Resource/comment-icon.png" /><span id="spanTotalCount"></span></div>
            <form id="FormPostComment">
                <input type="hidden" name="Link_Id" class="hdnLinkId" />
             
                <div class="addCommentWrap">
                    <h6>Comment as <a href="#">@(((ClaimsIdentity)User.Identity).FindFirst("FirstCustomName").Value) @(((ClaimsIdentity)User.Identity).FindAll("LastCustomName").FirstOrDefault().Value)  </a></h6>
                    <div class="form-group">
                        <label class="text-danger" id="lblError" style="display:none"></label>
                    </div>
                    <div class="commentTitleBox form-group">
                        <label>Title</label>
                        <label class="text-danger" id="lblTitle" style="display:none">Title is required</label>
                        <input type="text" class="form-control" name="Title" id="txtTitle" />
                        @*@Html.TextBoxFor(model => model.Comments.Title, new { @class = "form-control" })*@
                    </div>
                    <div class="commentDescriptionBox form-group">
                        <label>Description</label>
                        <label class="text-danger" id="lblDescription" style="display:none">Description is required</label>
                        <div class="commentBox">
                            @*@Html.TextAreaFor(model => model.Comments.Description, new { @class = "form-control", @placeholder = "What are your thoughts?", @id = "txtDescription" })*@
                            <textarea class="commentTextBox form-control" placeholder="What are your thoughts?" id="txtDescription"></textarea>
                            <div class="btn-wrap" >
                                <input type="button" class="btn commentBtn" onclick="return clearPost();" value="Cancel" id="btnCancel">
                                &nbsp;
                                <input type="button" class="btn commentBtn" onclick="return PostComment();" value="Post" id="btnAdd">
                                @*<input type="button" class="btn commentBtn" onclick="return EditComment();" value="Save" id="btnUpdate" style="display:none" >*@
                            </div>
                           
                        </div>
                    </div>
                </div>

            </form>
            @*@Html.Partial("pvComments", Model)*@
            <div class="allCommentsWrap" id="divComments">



            </div>

        </div>
    </div>

</section>


<script type="text/javascript" src="https://code.jquery.com/jquery.min.js"></script>
<script type="text/javascript" src="https://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>
<script>


    $(document).ready(function () {
        $("[aria-controls='Insert/edit image']").click(function () {
            alert();
        });
        $('.hdnLinkId').val($.urlParam('Link'));
        loadData();
    });

    function clearPost() {
        var editor = tinymce.EditorManager.get('txtDescription');
        var $html = $('<div />', { html: editor.getContent() });
        $html.find('img[src^="data:"]').remove();
        editor.setContent($html.html());
        tinyMCE.get('txtDescription').setContent('');
        $('#txtTitle').val("");
        $('#lblTitle').css('display', 'none');
        $('#lblDescription').css('display', 'none');
        $('#lblError').css('display', 'none');
        $('#hdnCommentId').val("");


    
    }

    //Load Data function    Recent change replace loaddata()
    function loadData() {

        $.ajax({
            url: "/Resources/GetComments",
            type: "GET",
            data: {
                Link: $.urlParam('Link')
            },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                var html = '';
                var totalrows = result.PagingInfo.TotalItems;
                if (totalrows > 1) {
                    $('#spanTotalCount').text(totalrows + ' Comments');
                }
                else {
                    $('#spanTotalCount').text(totalrows + ' Comment');
                }

                $.each(result.CommentsList, function (key, item) {

                    html += '<div class="commentTextWrap">';
                    html += '<div class="commentTitleWrap">';
                    html += '<div class="commentTitle" id="Comment' + item.CommentId + '">' + item.Title + '</div>';
                    html += '<div class="edit-delete-wrap">';

                    html += '<a href="#!" onclick="return getCommentByID(' + item.CommentId + ')"><img src="/img/Resource/edit-icon.svg" /></a>';
                    if (item.IsPin == true) {
                        html += '<a href="#!"  onclick="return PinComment(' + item.CommentId + ',' + false + ')"><img src="/img/Resource/pin-green.png" /></a>';
                    }
                    else {
                        html += '<a href="#!"  onclick="return PinComment(' + item.CommentId + ',' + true + ')"><img src="/img/Resource/pin-icon.svg" /></a>';
                    }
                    html += '<a href="#!"  onclick="return DeleteComment(' + item.CommentId + ')"><img src="/img/Resource/delete-icon.svg" /></a>';
                    html += '</div></div>';
                    html += '<p>' + item.Description + '</p>';
                    html += '<div class="commentNameTime">';
                    html += '<h5>' + item.CreatedBy + ' <span>' + item.DateCreated + '</span></h5>';
                    html += '</div></div>';

                });

                $("#ajaxLoading").css("display", "none");
                $("#ajax-backdrop").css("display", "none");
                $('#divComments').html("");
                $('#divComments').html(html);

            },
            error: function (errormessage) {
                alert('Sorry, Something went wrong. Please try again.');
            }
        });
    }



    //Add Data Function
    function PostComment() {

        //Tiny mce
        var myContent = tinyMCE.get('txtDescription').getContent({ format: 'raw' });
        //tinymce.activeEditor.getContent();

        //ckeditor
        //var text = CKEDITOR.instances.txtDescription.getData();
        //alert(text);

        var res = validate();
        if (res == false) {
            return false;
        }
        var form = $('#FormPostComment')[0];

        var dataString = new FormData(form);



        dataString.append('Description', myContent);

        $.ajax({
            //beforeSubmit: function () {
            //    /* Before submit */
            //    CKEDITOR.instances['Description'].updateElement();
            //},
            url: "/Resources/PostComment",
            data: dataString,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (result) {
                //    alert(result) remove alert
                if (result == "0") {
                    clearFields();
                  
                    loadData();

                    $('#lblError').css('display', 'none')
                }
                else {

                    $('#lblError').css('display', 'block')
                    $('#lblError').text(result)
                }


            },
            error: function (errormessage) {
                $('#lblError').css('display', 'block');
                $('#lblError').text('Sorry, Something went wrong. Please try again.');

            }
        });
    }

    ////Function for getting the Data Based upon Document ID
    function getCommentByID(Id) {
        //$('html, body').animate({
        //    scrollTop: ($('.commentTitleBox').offset().top)
        //}, 500);
        clearPopupFields();
        $('#hdnCommentId').val(Id);
        //$('#txtDocId').val("");
        //$('#txtClientDocId').val();
        //$('#txtTitle').val("");
        //$('#txtDescription').val("");
        //$('#flDocFile').val("");
        //$('#lblTitle').css('display', 'none');
        //$('#lblDocFile').css('display', 'none');
        //$('#lblError').css('display','none')
        //var ClientDocId= $("#aEditDoc").attr("data-ClientDocId")
       
        $.ajax({
            url: "/Resources/GetCommentByID?ID=" + Id,
            //data: {
            //    ID: Id,
            //    ClientDocId:ClientDocId
            //},
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {
                tinyMCE.get('txtDescriptionP').setContent(result.Description);
                $('#txtTitleP').val(result.Title);
                $('#CommentModalPopUp').modal('show');
                //$('#btnUpdate').show();
                //$('#btnCancel').show();
                //$('#btnAdd').hide();
            },
            error: function (errormessage) {
                $('#lblErrorP').css('display','block');
                $('#lblErrorP').text('Sorry, Something went wrong. Please try again.');
            }
        });
        return false;
    }

    ////function for updating document
    function EditComment() {
  
        var myContent = tinyMCE.get('txtDescriptionP').getContent({ format: 'raw' });
        var res = validateP();
        if (res == false) {
            return false;
        }
        var form = $('#FormPostCommentP')[0];

        var dataString = new FormData(form);
        dataString.append('Description', myContent);
        $.ajax({
            url: "/Resources/EditComment",
            data:dataString,
            type: "POST",
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (result) {
                if (result == "0") {
                    $('#CommentModalPopUp').modal('hide');
                    clearPopupFields()
                    loadData();
                }
                else{

                    $('#lblErrorP').css('display','block')
                    $('#lblErrorP').text(result)
                }
            },
            error: function (errormessage) {
                $('#lblErrorP').css('display','block');
                $('#lblErrorP').text('Sorry, Something went wrong. Please try again.');
            }
        });
    }


    function DeleteComment(CommentId) {
        var ans = confirm("Are you sure you want to delete this?");
        if (ans) {
 
            $.ajax({
                url: "/Resources/DeleteComment?CommentId=" + CommentId,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    loadData();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        }
    }


    function DeleteImage(Image) {
      
            $.ajax({
                url: "/Resources/DeleteImage?Source=" + Image,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                   
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
      
    }
    function PinComment(CommentId,IsPin) {
      

            $.ajax({
                url: "/Resources/PinComment?CommentId=" + CommentId+"&IsPin="+IsPin,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    loadData();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        
    }

    //Function for clearing the textboxes
    function clearFields() {
        tinyMCE.get('txtDescription').setContent('');
        $('#txtTitle').val("");
        $('#lblTitle').css('display', 'none');
        $('#lblDescription').css('display', 'none');
        $('#lblError').css('display', 'none');
        //$('#btnUpdate').hide();
        //$('#btnCancel').hide();
        //$('#btnAdd').show();
        $('#hdnCommentId').val("");
    }

    function clearPopupFields() {
        tinyMCE.get('txtDescriptionP').setContent('');
        $('#txtTitleP').val("");
        $('#lblTitleP').css('display', 'none');
        $('#lblDescriptionP').css('display', 'none');
        $('#lblErrorP').css('display', 'none');
        //$('#btnUpdate').hide();
        //$('#btnCancel').hide();
        //$('#btnAdd').show();
        $('#hdnCommentId').val("");
    }
    //Valdidation using jquery
    function validate() {
        var isValid = true;
        if ($('#txtTitle').val().trim() == "") {
            $('#lblTitle').css('display', 'block');
            isValid = false;
        }
        else {
            $('#lblTitle').css('display', 'none');
        }

        var editorContent = tinyMCE.get('txtDescription').getContent();
        if (editorContent == "" || editorContent == null) {

            $('#lblDescription').css('display', 'block');
            isValid = false;
        }
        else {
            $('#lblDescription').css('display', 'none');
        }

        return isValid;
    }
    function validateP() {
        var isValid = true;
        if ($('#txtTitleP').val().trim() == "") {
            $('#lblTitleP').css('display', 'block');
            isValid = false;
        }
        else {
            $('#lblTitleP').css('display', 'none');
        }

        var editorContent = tinyMCE.get('txtDescriptionP').getContent();
        if (editorContent == "" || editorContent == null) {

            $('#lblDescriptionP').css('display', 'block');
            isValid = false;
        }
        else {
            $('#lblDescriptionP').css('display', 'none');
        }

        return isValid;
    }
</script>

<div class="modal DocumentModalPopUp" id="CommentModalPopUp" tabindex="-1" role="dialog" aria-labelledby="myDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myDocumentModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <form id="FormPostCommentP" method="post">
                    <input type="hidden" name="CommentId" id="hdnCommentId" />
                    <input type="hidden" name="Link_Id" class="hdnLinkId" />
                    <div class="form-group">
                        <label class="text-danger" id="lblErrorP" style="display:none"></label>
                    </div>
                    <div class="form-group">
                        <label>Title</label>
                        <label class="text-danger" id="lblTitleP" style="display:none">Title is required</label>
                        <input type="text" id="txtTitleP" class="form-control" name="Title" />
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <label class="text-danger" id="lblDescriptionP" style="display:none">Description is required</label>
                     
                        <textarea class="form-control" placeholder="What are your thoughts?" id="txtDescriptionP"></textarea>


                    </div>
              




                </form>


            </div>

            <div class="modal-footer">
                <input type="button" class="btn commentBtnP" onclick="return EditComment();" value="Save" id="btnEditComment">


            </div>

        </div>
    </div>
</div>