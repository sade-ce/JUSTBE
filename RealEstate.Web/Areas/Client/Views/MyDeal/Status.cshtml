@model RealEstate.Entities.ViewModels.MstClientLiveDealViewModel
@using System.Security.Claims;
@{
    ViewBag.Title = "Just BE | Status";
    Layout = "~/Areas/Client/Views/Shared/_ClientLayoutNew.cshtml";
}
<script type="text/javascript" src="https://code.jquery.com/jquery.min.js"></script>
<script type="text/javascript" src="https://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>
<style>
    .toDOList .addBtn {
        background: #000;
    }

        .toDOList .addBtn:hover {
            background: #0bb7a5;
            color: #fff;
        }

    .col-new {
        margin-bottom: 0.5rem;
    }
    /*.w-100-custom{
        max-width:100%;
        max-height:100%;
        display: block;
    }
    .photos{
        height:580px ;width:350px;
    }*/

    .carousel-item img {
        height: 260px;
        border-radius: 15px;
        width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    .carousel-item > div {
        width: 20%;
        height: 150px;
        display: inline-block;
        background-color: #5d730c;
    }


    .carousel-item div h2, .owl-carousel div .textoverlay {
        position: absolute;
        color: #FFF;
        font-size: 12px;
        display: block;
    }


    #imageDiv {
        width: 300px;
    }

        #imageDiv img {
            max-width: 98%;
        }

    div#jssor_1 img {
        max-width: 100% !important;
        height: 100% !important;
        width: auto !important;
        max-height: 100% !important;
        text-align: center;
    }

    .prop-box-appnt {
        max-height: 343px;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .vendorlist.prop-box-vendor {
        max-height: 316px;
        overflow-y: auto;
    }

    ul.dealDocument.prop-dealDocument {
        max-height: 189px;
        overflow-y: auto;
    }

    .prop-box-tdlist {
        max-height: 183px;
        overflow-y: auto;
    }


    @@media only screen and (min-width: 0px) and (max-width:767px) {
        .vendorlist.prop-box-vendor {
            max-height: 100% !important;
        }

        .prop-box-appnt {
            max-height: 100% !important;
        }

        .prop-box-tdlist {
            max-height: 100% !important;
        }
    }
</style>


<div class="top-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <div class="breadcrumbs">
                    <ul class="align-items-center d-flex list-unstyled m-0 p-0">
                        <li class="d-none d-lg-block mr-4">

                            <a href="#!" id="toggleHeader"><img src="~/Content/NewVersion/images/ham.png" alt="" class="img-fluid"></a>

                        </li>
                        @*<li>Property<span>&nbsp;>&nbsp;</span></li>
                            <li class="active">My Properties<span>&nbsp;>&nbsp;</span></li>*@

                        <li>
                            <a class="nav-link nav-cal-drop nav-cal-drop-new dropdown-toggle " href="@Url.Action("List", "MyDeal", new { area = "Client" })" role="button">My Transactions<span style="color:#212529">&nbsp;>&nbsp;</span></a>
                        </li>


                        @if ((Model.MLSListing.Count() > 0))
                        {
                            if (Model.MstGalleryList.Count() > 0)

                            {
                                if (Model.ClosingDate.ListingTypeID.ToString() == "1")
                                {

                                    if (Model.DisplayListing.ListingSource.ToString() == "Compass")
                                    {

                                        string[] Addressmenu = (Model.DisplayListing.Address).Split('|');
                                        <li class="no-activee">@Addressmenu[0].Replace("-", " ")</li>
                                    }
                                }
                                else
                                {
                                    if (Model.DisplayListing != null)
                                    {
                                        <li class="no-activee">   @Model.DisplayListing.Address</li>
                                    }

                                }
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="col-md-6 d-md-block d-none">
                <div class="accountLog d-flex justify-content-end align-items-center">
                    <p>Hello, &nbsp;<span>@(((ClaimsIdentity)User.Identity).FindFirst("FirstCustomName").Value)</span></p>
                    <div class="profileImgtop" style="background-size: cover; background-position: center;   height:50px;">
                        <!-- <img alt="profile-img" id="profileimg" class="img-fluid profileimg"> -->
                    </div>

                    <span> &nbsp; &nbsp; | &nbsp; </span>

                    <div class="dropdown">
                        <button class="btn  dropdown-toggle mybtn" type="button" id="dropdownMenuButton" data-toggle="dropdown"
                                aria-haspopup="true" aria-expanded="false">
                            My Account
                        </button>
                        <div class="dropdown-menu MyAccountDrop" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" href="@Url.Action("EmailPreferences", "Account", new { @area = "" })"><i class="flaticon-gear"></i>Notification Settings</a>
                            <a class="dropdown-item" href="@Url.Action("EditProfile", "Account", new { @area = "" })"><i class="flaticon-conversation"></i>Edit Profile</a>
                            <a class="dropdown-item" href="@Url.Action("ChangePassword", "Account", new { @area = "" })"><i class="flaticon-password"></i>Change Password</a>

                            @using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm" }))
                            {
                                @Html.AntiForgeryToken()
                                <a class="dropdown-item" href="javascript:document.getElementById('logoutForm').submit()"><i class="flaticon-logout"></i>Logout</a>

                            }
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>


<!-- Property Page main container start -->
<section class="propertyOuterSection d-none  d-md-block d-lg-block">

    <div class="container">
        <!-- Time Line Start -->
        <div class="row">
            <div class="col-md-12">
                <h3 class="pdTitle">Progress Timeline</h3>
                <div class="propertyBox p15">
                    @*<p>
                            Track your progress and learn about the upcoming steps
                            related to your deal.
                        </p>*@
                    @*<p>Complete</p>*@
                    <div class="dfd">
                        <div class="wrapper">
                            <div class="arrow-steps clearfix">


                                @*<div class="step current"> <span> Complete</span> </div>
                                    <div class="step i_progress"> <span>In Progress</span> </div>
                                    <div class="step"> <span> Pending </span> </div>
                                    <div class="step"> <span>Pending</span> </div>
                                    <div class="step"> <span>Pending</span> </div>*@
                                @{ var Step1 = "Pending"; var Step2 = "Pending"; var Step3 = "Pending"; var Step4 = "Pending"; var Step5 = "Pending";
                                    if (ViewBag.TransactionType == "Seller")
                                    {
                                        foreach (var item in Model.CompleletedDealTimeline)
                                        {

                                            if (item.Status == "Welcome" || item.Status == "Listing appointment" || item.Status == "Signed listing agreement" || item.Status == "Touch-ups/Painting" || item.Status == "Staging" || item.Status == "Photography")
                                            {
                                                Step1 = "InProgress"; Step2 = "Pending"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "House Goes Live" || item.Status == "Open house" || item.Status == "Review Offer(s)")
                                            {
                                                Step1 = "Done"; Step2 = "InProgress"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }



                                            //If Condo / HOA Document Review Period has made entry in table, it means lenders step are done
                                            else if (item.Status == "Ratified Offer")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Home Inspection" || item.Status == "Appraisal" || item.Status == "Financing" || item.Status == "Home sale contingency")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Through contingencies")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Walk-through")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            }
                                            //else if (item.Status == "Settlement" && @Convert.ToDateTime(item.UpdatedOn) < System.DateTime.Now)
                                            //{
                                            //    Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            //}
                                            //else if (item.Status == "Settlement" && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))

                                            //{
                                            //    Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";

                                            //}
                                            else if (item.Status == "Settlement" && item.IsCompleted==true)

                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";

                                            }
                                            else { }

                                        }

                                        <div class="step @(Step1 == "Done" ? "current" : Step1 == "InProgress" ? "i_progress" : "")"> <span> Listing Preparation</span></div>
                                                                                        <div class="step @(Step2 == "Done" ? "current" :Step2=="InProgress"?"i_progress": "")"> <span> Active Listing</span> </div>
                                                                                        <div class="step @(Step3 == "Done" ? "current" :Step3=="InProgress"?"i_progress": "")"> <span>Under Contract</span> </div>
                                                                                        <div class="step @(Step4 == "Done" ? "current" :Step4=="InProgress"?"i_progress": "")"> <span>Through Contingencies</span> </div>
                                                                                        <div class="step @(Step5 == "Done" ? "current" :Step5=="InProgress"?"i_progress": "")"> <span>Settled</span> </div>
                                    }
                                    else
                                    {
                                        foreach (var item in Model.CompleletedDealTimeline)
                                        {

                                            if (item.Status == "Welcome" || item.Status == "Lender Call / Questionnaire" || item.Status == "Lender Pre-Approval Letter")
                                            {
                                                Step1 = "InProgress"; Step2 = "Pending"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "Buyer-Agency Agreement" || item.Status == "Search Criteria Set")
                                            {
                                                Step1 = "Done"; Step2 = "InProgress"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }


                                            else if (item.Status == "Ratified Offer")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "Post-Settlement Occupancy Agreement" || item.Status == "Home Inspection Contingency" || item.Status == "Appraisal Contingency" || item.Status == "Financing Contingency" || item.Status == "Sale of Home Contingency" || item.Status == "Pre-Settlement Occupancy Agreement" || item.Status == "Post-Settlement Occupancy Agreement")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Through contingencies")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Final walk-through")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            }


                                            //  else if ((item.Status == "Post-Settlement Occupancy Agreement" || item.Status == "Settlement") && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))

                                            else if ((item.Status == "Settlement") && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))

                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";

                                            }
                                            else { }

                                        }

                                        <div class="step @(Step1 == "Done" ? "current" :Step1=="InProgress"?"i_progress": "")"> <span> Getting Started </span> </div>
                                        <div class="step @(Step2 == "Done" ? "current" :Step2=="InProgress"?"i_progress": "")"> <span> Currently Searching </span> </div>
                                        <div class="step @(Step3 == "Done" ? "current" :Step3=="InProgress"?"i_progress": "")"> <span>Under Contract</span> </div>
                                        <div class="step @(Step4 == "Done" ? "current" :Step4=="InProgress"?"i_progress": "")"> <span>Through Contingencies</span> </div>
                                        <div class="step @(Step5 == "Done" ? "current" :Step5=="InProgress"?"i_progress": "")"> <span>Settled </span> </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Time Line End -->
    </div>


    <div class="container">


        <!-- steps Traker S -->
        <div class="row">
            <div class="col-md-8">
                <div class="propertyBox">
                    <table class="table table-bordered" id="status-tbl">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Done</th>
                                <th scope="col">Info</th>
                                <th scope="col">Steps</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.TransactionType == "Buyer")
                            {
                                foreach (var item in Model.DealTimeline)
                                {
                                    <tr>

                                        @if (item.IsContingencies == true)
                                        {
                                            if (item.IsApplicable == true)
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>


                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>
                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }

                                            }

                                            else
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td style="text-decoration:line-through;">@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td>@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }


                                            }


                                        }
                                        else
                                        {
                                            if (item.IsCompleted == true)
                                            {
                                                <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>

                                            }
                                            else
                                            {

                                                <td scope="row"><span class="green text-center"></span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">TBD</span></td>
                                            }
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                foreach (var item in Model.DealTimeline)
                                {
                                    <tr>

                                        @if (item.IsContingencies == true)
                                        {
                                            if (item.IsApplicable == true)
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>


                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>
                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }

                                            }

                                            else
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td style="text-decoration:line-through;">@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td>@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }


                                            }


                                        }
                                        else
                                        {
                                            if (item.IsCompleted == true)
                                            {
                                                <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>

                                            }
                                            else
                                            {
                                                if (item.Status == "House Goes Live" && Model.MLSListing.Count() > 0)
                                                {
                                                  
                                                        <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>
                                                   

                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                }
                                                @*<td scope="row"><span class="green text-center"></span></td>*@
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">TBD</span></td>
                                            }
                                        }
                                    </tr>
                                }


                                @*foreach (var item in Model.TimelineMissingData)
                                {
                                    <tr>
                                        <td scope="row"><span class="green text-center"></span></td>
                                        <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                        <td style="color:gray">@item.Status</td>
                                        <td></td>
                                    </tr>
                                }*@
                            }
                        </tbody>
                    </table>

                </div>


                <h3 class="pdTitle">Deal Documents</h3>
                <div class="propertyBox">
                    <ul class="dealDocument prop-dealDocument">
                        <div class="tDocumentbody"> </div>
                        @if (Model.ClientDoc.Count() > 0)
                        {
                            foreach (var item in Model.ClientDoc)
                            {
                                <li>

                                    @if (@item.TrackDocFile.ToString() == ".jpg")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".jpeg")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".pdf")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/pdf.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                    @if (@item.TrackDocFile.ToString() == ".doc")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".docx")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                    @if (@item.TrackDocFile.ToString() == ".png")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".txt")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/txt.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                </li>
                            }
                        }
                    </ul>
                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" href="!#" role="button" data-toggle="modal" data-target="#DocumentModalPopUp" onclick="clearTextBox();"> Add Document </button>
                    </div>
                </div>

                <h3 class="pdTitle">Vendors</h3>
                <div class="propertyBox ">
                    <div class="vendorlist prop-box-vendor">
                        @if (Model.DealVendorList.Count() > 0)
                        {
                            foreach (var item in Model.DealVendorList)
                            {

                                <div class="vendorBox">

                                    <div class="row">
                                        <div class="col-md-10">
                                            <h4>@item.VendorType: @item.Vendor</h4>
                                            @if (!string.IsNullOrEmpty(item.VendorPhone))
                                            {
                                                <p>Ph: <a href="tel:@item.VendorPhone" style="color: #0bb7a5">@item.VendorPhone</a> </p>
                                            }
                                            @if (!string.IsNullOrEmpty(item.VendorEmail))
                                            {
                                                <p>Email: <a href="mailto:@item.VendorEmail" style="color: #0bb7a5">@item.VendorEmail</a></p>
                                            }
                                        </div>
                                        <div class="col-md-2">
                                            <div class="settingsOuter">
                                                <span class="editIcons">
                                                    @if (item.UserRole == "Client")
                                                    {
                                                        <a href="#!" id="editv" title="Edit" class="sassIcon" data-Vendor_Id="@item.Vendor_Id" data-DealVendor_Id="@item.DealVendorId"><img src="/Content/NewVersion/images/edit-doc.png" /></a>

                                                        <a href="#!" id="deletev" title="Delete" class="sassIcon" data-Vendor_Id="@item.DealVendorId"><img src="/Content/NewVersion/images/delete-doc.png" /></a>
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" data-toggle="modal" data-target="#VendorModalPopUp" onclick="clearTextBoxVendor();">Add Vendor</button>
                    </div>
                </div>

                <h3 class="pdTitle">Tags</h3>
                <div class="propertyBox">
                    <div class="tagBox">
                        @if (Model.BuildingView != null)
                        {
                            @*<a href="/Client/Buildings/Details?BuildingId=@Model.BuildingView.BuildingId" target="_blank">*@
                            <a href="#!">
                                <span class="tags">Buildings</span>
                            </a>
                        }
                        else
                        {
                            <span>No Tag Found</span>
                        }
                        @*<span class="tags">Neighbourhood</span>
                            <span class="tags">Article</span>
                            <span class="tags">Buildings</span>

                            <span class="tags">Article</span>
                            <span class="tags">Neighbourhood</span>
                            <span class="tags">Neighbourhood</span>


                            <span class="tags">Article</span>
                            <span class="tags">Buildings</span>*@
                    </div>
                </div>

            </div>





            <div class="col-md-4">

                @if (Model.MLSListing.Count() > 0)
                {
                    <h3 class="pdTitle">Photo(s)</h3>
                    if (Model.ClosingDate.ListingTypeID.ToString() == "1")
                    {

                        <div class="propertyBox">

                            @if (Model.DisplayListing.ListingSource.ToString() == "Compass")
                            {
                                <a target="_blank" href="@Url.Action("Details", "Listing", new { area = "", mls_id = @Model.DisplayListing.MLSID })">
                                    <div class="ds">
                                        <div class="conBanner"
                                             style="background-image:url(@Model.DisplayListing.ImageURL) ; background-size: cover; background-position: center;   height:200px;">

                                        </div>
                                    </div>
                                </a>
                            }
                            else
                            {
                                <div class="ds">
                                    <div class="conBanner"
                                         style="background-image:url(@Model.DisplayListing.ImageURL) ; background-size: cover; background-position: center;   height:200px;">

                                    </div>
                                </div>
                            }
                        </div>



                    }
                    else
                    {


                        <div class="propertyBox">
                            <a target="_blank" href="@Model.ClosingDate.URL">
                                <div class="ds">
                                    <div class="conBanner"
                                         style="background-image: url('../../../../img/sell homee.jpg') ; background-size: cover; background-position: center;   height:200px;">
                                    </div>
                                </div>
                            </a>

                        </div>



                    }
                }

                @*@if (Model.MstGalleryList.Count() > 0)

                {*@
                    @if (Model.ClosingDate.ListingTypeID.ToString() == "1")
                    {

                        <div class="propertyBox p15 my-prop-box">
                            @{string[] Address = null;}
                            @if (Model.DisplayListing.ListingSource.ToString() == "Compass")
                            {
                                Address = (Model.DisplayListing.Address).Split('|');
                                <p> <img src="~/Content/NewVersion/images/pd1.jpg" alt=""> <strong>@Address[0].Replace("-", " ")</strong> </p>
                                    <p> <img src="~/Content/NewVersion/images/bed.jpg" alt=""> <strong>@Address[1]</strong> </p>
                                    <p> <img src="~/Content/NewVersion/images/shower.jpg" alt=""> <strong>@Address[2]</strong></p>
                                    <p> <img src="~/Content/NewVersion/images/dollar.jpg" alt=""> <strong>@Address[3].Replace("$", "")</strong></p>

                                    @*<h3><strong>@Address[3]</strong></h3>*@
                            }
                        </div>

                                }
                                else
                                {
                                    if (Model.DisplayListing != null)
                                    {
                                        <div class="propertyBox p15 my-prop-box">

                                            @{string Address = (Model.DisplayListing.Address);
                                                <p> <img src="~/Content/NewVersion/images/pd1.jpg" alt=""> <strong>@Address</strong> </p>

                                                <p> <img src="~/Content/NewVersion/images/bed.jpg" alt=""> <strong>--</strong> </p>

                                                <p> <img src="~/Content/NewVersion/images/shower.jpg" alt=""> <strong>--</strong></p>
                                                <p> <img src="~/Content/NewVersion/images/dollar.jpg" alt=""> <strong>--</strong></p>
                                            }
                                        </div>
                                                    }
                                                }
                                                @*}*@


                @if (Model.MLSListing.Count() > 0)
                {
                    if (@Model.ClosingDate.ClosingDate != null)
                    {
                    <h3 class="pdTitle">Days to Close</h3>
                    <div class="propertyBox">
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab"
                                   aria-controls="home" aria-selected="true">Settlement</a>
                            </li>
                            @if (@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Days > 0)
                            {
                                <li class="nav-item">
                                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
                                       aria-controls="profile" aria-selected="false">Countdown</a>
                                </li>
                            }
                        </ul>
                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">

                                <div class="dayToCloseBox">
                                    <p>@Convert.ToDateTime(Model.ClosingDate.ClosingDate).ToString("dddd")</p>
                                    <h3>@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).ToString("dd")</h3>
                                    <p>@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).ToString("MMMM")</p>
                                </div>

                            </div>
                            <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                                @*<div class="text-center bgGray">
                                    <img src="~/Content/NewVersion/images/date1.jpg" alt="">
                                    </div>*@
                                <div class="text-center bgGray" id="clockdiv">
                                    <div>
                                        <span class="days"></span>
                                        <div class="smalltext">Days</div>
                                    </div>
                                    <div>
                                        <span class="hours"></span>
                                        <div class="smalltext">Hours</div>
                                    </div>
                                    <div>
                                        <span class="minutes"></span>
                                        <div class="smalltext">Mins</div>
                                    </div>
                                    <div>
                                        <span class="seconds"></span>
                                        <div class="smalltext">Secs</div>
                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>
                    }
                }
                <h3 class="pdTitle">Key Dates</h3>
                <div class="propertyBox ">

                    <div class="widget-vend Eventlist prop-box-appnt" id="Eventlist">
                        @if (Model.AppointmentList.Count() > 0)
                        {
                            <div class="post" style="margin:0 0 10px 0">

                                <table class="table table-bordered custTableAgenda table-striped ">
                                    <tbody>
                                        <tr>
                                            <th>Date</th>
                                            <th>Description</th>
                                            <th class="actionwdth">Action</th>
                                        </tr>
                                        @foreach (var item in Model.AppointmentList)
                                        {
                                            <tr>
                                                <td>@item.Date</td>
                                                <td>@item.Description</td>
                                                <td>
                                                    @if (item.UserRole == "Client")
                                                    {
                                                        <span class="editIcons">
                                                            <a href="#!" id="editevent" title="Edit" class="sassIcon" data-Event_Id="@item.Id" data-DealEvent_Id="@item.Id"><img src="~/Content/NewVersion/images/edit-doc.png" /></a>

                                                            <a href="#!" id="deletevent" title="Delete" class="sassIcon" data-Event_Id="@item.Id"><img src="~/Content/NewVersion/images/delete-doc.png" /></a>
                                                        </span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>


                            </div>
                        }
                    </div>

                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" data-toggle="modal" data-target="#EventModalPopUp" onclick="clearTextBoxEvent();">Add Event</button>

                    </div>
                </div>

                <div id='container'>
                    <div class="propertyBox ">
                        <h3 class="pdTitle">To-Do List</h3>
                        <div class="toDOList ">
                            <form id="FormUploadToDoList" method="post" class="form-horizontal">
                                <div id="divMyToDoList" class="header">
                                    <label class="text-danger " id="lblErrorToDoList" style="display:none"></label>
                                    <label class="text-danger " id="lblTask" style="display:none;text-transform: none;">This is required</label>
                                    <input type="text" id="txtTask" placeholder="Type here" name="Task">
                                    <input onclick="return AddToDoList()" class="addBtn" type="button" value="Add" />
                                </div>
                            </form>
                            <ul id="myToDoList" class="prop-box-tdlist"></ul>

                        </div>
                    </div>
                </div>

                @if (Model.MstGalleryList.Count() > 0)
                {

                    <div class="propertyBox p15 ">
                        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                @{ int j = 0;
                                    foreach (var item in Model.MstGalleryList)
                                    {
                                        <li data-target="#carouselExampleIndicators" data-slide-to="@j" class="@(j == 0 ? "active" : "")"></li>
                                        j = j + 1;
                                    }
                                }
                            </ol>
                            <div class="carousel-inner photos">
                                @{ int i = 0;
                                    foreach (var item in Model.MstGalleryList)
                                    {
                                        i = i + 1;

                                        <div class="carousel-item @(i == 1 ? "active" : "") photos">
                                            <a href="/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" target="_blank">
                                                @if (!string.IsNullOrEmpty(item.PhotoThumb))
                                                {

                                                    <img class="d-block w-100 img-fluid" src="@item.PhotoThumb" alt="Slide @i">
                                                }
                                                else
                                                {
                                                    <img class="d-block w-100" src="~/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" alt="Slide @i">
                                                }

                                                <div class="carousel-caption d-none d-md-block">

                                                    <p>@item.Description</p>
                                                </div>

                                            </a>
                                        </div>


                                    }
                                }
                            </div>
                            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>

                        @*<div id="jssor_1" style="position:relative;margin:0 auto;top:0px;left:0px;width:980px;height:580px;overflow:hidden;visibility:hidden;">
                                <!-- Loading Screen -->

                                <div data-u="slides" style="cursor:default;position:relative;top:0px;left:0px;width:980px;height:580px;overflow:hidden;">
                                    @foreach (var item in Model.MstGalleryList)
                                    { <div data-idle="5000">
                                        <a href="/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" class="swipebox" title="@item.Description">
                                            <img data-u="image" src="@item.PhotoThumb" alt="" height="580" width="350">
                                        </a>
                                        <figcaption>@item.Description</figcaption>

                                    </div>

                                    }

                                    <a data-u="any" href="https://www.jssor.com" style="display:none">slider in bootstrap</a>
                                </div>
                                <!-- Bullet Navigator -->
                                <div data-u="navigator" class="jssorb053" style="position:absolute;bottom:12px;right:12px;" data-autocenter="1" data-scale="0.5" data-scale-bottom="0.75">
                                    <div data-u="prototype" class="i" style="width:16px;height:16px;">
                                        <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                            <path class="b" d="M11400,13800H4600c-1320,0-2400-1080-2400-2400V4600c0-1320,1080-2400,2400-2400h6800 c1320,0,2400,1080,2400,2400v6800C13800,12720,12720,13800,11400,13800z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <!-- Arrow Navigator -->
                                <div data-u="arrowleft" class="jssora093" style="width:50px;height:50px;top:0px;left:30px;" data-autocenter="2" data-scale="0.75" data-scale-left="0.75">
                                    <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                        <circle class="c" cx="8000" cy="8000" r="5920"></circle>
                                        <polyline class="a" points="7777.8,6080 5857.8,8000 7777.8,9920 "></polyline>
                                        <line class="a" x1="10142.2" y1="8000" x2="5857.8" y2="8000"></line>
                                    </svg>
                                </div>
                                <div data-u="arrowright" class="jssora093" style="width:50px;height:50px;top:0px;right:30px;" data-autocenter="2" data-scale="0.75" data-scale-right="0.75">
                                    <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                        <circle class="c" cx="8000" cy="8000" r="5920"></circle>
                                        <polyline class="a" points="8222.2,6080 10142.2,8000 8222.2,9920 "></polyline>
                                        <line class="a" x1="5857.8" y1="8000" x2="10142.2" y2="8000"></line>
                                    </svg>
                                </div>
                            </div>*@

                    </div>
                                    }

            </div>
        </div>
        <!-- steps Traker E -->
    </div>
</section>
<!-- Property Page main container start -->
@**************************************************************************** Mobile view Start  *********************************************************************@

<section class="propertyOuterSection d-block  d-md-none d-lg-none">

    <div class="container1">
        <!-- Time Line Start -->
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="propertyBox p15">
                        <h5>Progress Timeline</h5>
                        @*<p>
                                Track your progress and learn about the upcoming steps
                                related to your deal.
                            </p>*@
                        @*<p>Complete</p>*@
                        <div class="dfd">
                            <div class="wrapper">
                                <div class="arrow-steps clearfix">


                                    @*<div class="step current"> <span> Complete</span> </div>
                                        <div class="step i_progress"> <span>In Progress</span> </div>
                                        <div class="step"> <span> Pending </span> </div>
                                        <div class="step"> <span>Pending</span> </div>
                                        <div class="step"> <span>Pending</span> </div>*@
                                    @if (ViewBag.TransactionType == "Seller")
                                    {
                                        foreach (var item in Model.CompleletedDealTimeline)
                                        {

                                            if (item.Status == "Welcome" || item.Status == "Listing appointment" || item.Status == "Signed listing agreement" || item.Status == "Touch-ups/Painting" || item.Status == "Staging" || item.Status == "Photography")
                                            {
                                                Step1 = "InProgress"; Step2 = "Pending"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "House Goes Live" || item.Status == "Open house" || item.Status == "Review Offer(s)")
                                            {
                                                Step1 = "Done"; Step2 = "InProgress"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }



                                            //If Condo / HOA Document Review Period has made entry in table, it means lenders step are done
                                            else if (item.Status == "Ratified Offer")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Home Inspection" || item.Status == "Appraisal" || item.Status == "Financing" || item.Status == "Home sale contingency")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Through contingencies")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Walk-through")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            }
                                            //else if (item.Status == "Settlement" && @Convert.ToDateTime(item.UpdatedOn) < System.DateTime.Now)
                                            //{
                                            //    Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            //}
                                            // else if (item.Status == "Settlement" && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))
                                            else if (item.Status == "Settlement" && item.IsCompleted == true)
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";

                                            }
                                            else { }

                                        }

                                    <div class="step @(Step1 == "Done" ? "current" : Step1 == "InProgress" ? "i_progress" : "")"> <span> Listing Preparation</span></div>
                                    <div class="step @(Step2 == "Done" ? "current" :Step2=="InProgress"?"i_progress": "")"> <span> Active Listing</span> </div>
                                    <div class="step @(Step3 == "Done" ? "current" :Step3=="InProgress"?"i_progress": "")"> <span>Under Contract</span> </div>
                                    <div class="step @(Step4 == "Done" ? "current" :Step4=="InProgress"?"i_progress": "")"> <span>Through Contingencies</span> </div>
                                    <div class="step @(Step5 == "Done" ? "current" :Step5=="InProgress"?"i_progress": "")"> <span>Settled</span> </div>
                                    }
                                    else
                                    {
                                        foreach (var item in Model.CompleletedDealTimeline)
                                        {


                                            if (item.Status == "Welcome" || item.Status == "Lender Call / Questionnaire" || item.Status == "Lender Pre-Approval Letter")
                                            {
                                                Step1 = "InProgress"; Step2 = "Pending"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "Buyer-Agency Agreement" || item.Status == "Search Criteria Set")
                                            {
                                                Step1 = "Done"; Step2 = "InProgress"; Step3 = "Pending"; Step4 = "Pending"; Step5 = "Pending";

                                            }


                                            else if (item.Status == "Ratified Offer")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";

                                            }

                                            else if (item.Status == "Post-Settlement Occupancy Agreement" || item.Status == "Home Inspection Contingency" || item.Status == "Appraisal Contingency" || item.Status == "Financing Contingency" || item.Status == "Sale of Home Contingency" || item.Status == "Pre-Settlement Occupancy Agreement" || item.Status == "Post-Settlement Occupancy Agreement")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "InProgress"; Step4 = "Pending"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Through contingencies")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "InProgress"; Step5 = "Pending";


                                            }
                                            else if (item.Status == "Final walk-through")
                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";


                                            }


                                            //  else if ((item.Status == "Post-Settlement Occupancy Agreement" || item.Status == "Settlement") && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))

                                            else if ((item.Status == "Settlement") && (System.DateTime.Now >= @Convert.ToDateTime(item.UpdatedOn)))

                                            {
                                                Step1 = "Done"; Step2 = "Done"; Step3 = "Done"; Step4 = "Done"; Step5 = "InProgress";

                                            }
                                            else { }

                                        }

                                        <div class="step @(Step1 == "Done" ? "current" :Step1=="InProgress"?"i_progress": "")"> <span> Getting Started </span> </div>
                                        <div class="step @(Step2 == "Done" ? "current" :Step2=="InProgress"?"i_progress": "")"> <span> Currently Searching </span> </div>
                                        <div class="step @(Step3 == "Done" ? "current" :Step3=="InProgress"?"i_progress": "")"> <span>Under Contract</span> </div>
                                        <div class="step @(Step4 == "Done" ? "current" :Step4=="InProgress"?"i_progress": "")"> <span>Through Contingencies</span> </div>
                                        <div class="step @(Step5 == "Done" ? "current" :Step5=="InProgress"?"i_progress": "")"> <span>Settled </span> </div>
                                    }




                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Time Line End -->
    </div>




    <div class="container">

        @if (Model.MLSListing.Count() > 0)
        {
            <h3 class="pdTitle">Photo(s)</h3>
            if (Model.ClosingDate.ListingTypeID.ToString() == "1")
            {

                <div class="propertyBox">

                    @if (Model.DisplayListing.ListingSource.ToString() == "Compass")
                    {
                        <a target="_blank" href="@Url.Action("Details", "Listing", new { area = "", mls_id = @Model.DisplayListing.MLSID })">
                            <div class="ds">
                                <div class="conBanner"
                                     style="background-image:url(@Model.DisplayListing.ImageURL) ; background-size: cover; background-position: center;   height:200px;">

                                </div>
                            </div>
                        </a>
                    }
                    else
                    {
                        <div class="ds">
                            <div class="conBanner"
                                 style="background-image:url(@Model.DisplayListing.ImageURL) ; background-size: cover; background-position: center;   height:200px;">

                            </div>
                        </div>
                    }
                </div>



            }
            else
            {


                <div class="propertyBox">
                    <a target="_blank" href="@Model.ClosingDate.URL">
                        <div class="ds">
                            <div class="conBanner"
                                 style="background-image: url('../../../../img/sell homee.jpg') ; background-size: cover; background-position: center;   height:200px;">
                            </div>
                        </div>
                    </a>

                </div>



            }
        }
    </div>


    <div class="container">
        @if ((Model.MLSListing.Count() > 0))
        {
 <!-- p Detail S-->

            <div class="row">
                @if (Model.MstGalleryList.Count() > 0)
                {



                    if (Model.ClosingDate.ListingTypeID.ToString() == "1")
                    {
                        <div class="col-md-12">
                            <div class="propertyBox p15 my-prop-box">
                                @{string[] Address = null;}
                                @if (Model.DisplayListing.ListingSource.ToString() == "Compass")
                                {
                                    Address = (Model.DisplayListing.Address).Split('|');
                                    <p> <img src="~/Content/NewVersion/images/pd1.jpg" alt=""> <strong>@Address[0].Replace("-", " ")</strong> </p>
                                                            <p> <img src="~/Content/NewVersion/images/bed.jpg" alt=""> <strong>@Address[1]</strong> </p>
                                                            <p> <img src="~/Content/NewVersion/images/shower.jpg" alt=""> <strong>@Address[2]</strong></p>
                                                            <p> <img src="~/Content/NewVersion/images/dollar.jpg" alt=""> <strong>@Address[3].Replace("$", "")</strong></p>

                                                            @*<h3><strong>@Address[3]</strong></h3>*@
                                }
                            </div>
                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-12">
                                            @if (Model.DisplayListing != null)
                                            {
                                                <div class="propertyBox p15">
                                                    @{string Address = (Model.DisplayListing.Address);
                                                        <p> <img src="~/Content/NewVersion/images/pd1.jpg" alt=""> <strong>@Address</strong> </p>

                                                                            <p> <img src="~/Content/NewVersion/images/bed.jpg" alt=""> <strong>--</strong> </p>

                                                                            <p> <img src="~/Content/NewVersion/images/shower.jpg" alt=""> <strong>--</strong></p>
                                                                            <p> <img src="~/Content/NewVersion/images/dollar.jpg" alt=""> <strong>--</strong></p>

                                                    }
                                                </div>
                                                        }
                                        </div>
                                                            }
                                                        }



            </div>

               <!-- p Detail E--> }
    </div>




    <!-- Steps Start -->
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="propertyBox">
                    <table class="table table-bordered" id="status-tbl">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Done</th>
                                <th scope="col">Info</th>
                                <th scope="col">Steps</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.TransactionType == "Buyer")
                            {
                                foreach (var item in Model.DealTimeline)
                                {
                                    <tr>

                                        @if (item.IsContingencies == true)
                                        {
                                            if (item.IsApplicable == true)
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>


                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>
                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }

                                            }

                                            else
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td style="text-decoration:line-through;">@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td>@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }


                                            }


                                        }
                                        else
                                        {
                                            if (item.IsCompleted == true)
                                            {
                                                <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>

                                            }
                                            else
                                            {

                                                <td scope="row"><span class="green text-center"></span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">TBD</span></td>
                                            }
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                foreach (var item in Model.DealTimeline)
                                {
                                    <tr>

                                        @if (item.IsContingencies == true)
                                        {
                                            if (item.IsApplicable == true)
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>


                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                    <td>@item.Status</td>
                                                    if (@Convert.ToDateTime(item.UpdatedOn) > System.DateTime.Now)
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                    else
                                                    {
                                                        <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>
                                                    }
                                                }

                                            }

                                            else
                                            {
                                                if (item.IsCompleted == true)
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td style="text-decoration:line-through;">@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                    <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>


                                                    <td>@item.Status</td>
                                                    <td><span class="ddtt">TBD</span></td>
                                                }


                                            }


                                        }
                                        else
                                        {
                                            if (item.IsCompleted == true)
                                            {
                                                <td scope="row"><span class="green text-center">&#10003;</span></td>
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">@Convert.ToDateTime(item.UpdatedOn).ToString("dd")<br>@Convert.ToDateTime(item.UpdatedOn).ToString("MMM")</span></td>

                                            }
                                            else
                                            {
                                                if (item.Status == "House Goes Live" && Model.MLSListing.Count() > 0)
                                                {

                                                    <td scope="row"><span class="green text-center"><i class="fa fa-clock-o" aria-hidden="true"></i></span></td>


                                                }
                                                else
                                                {
                                                    <td scope="row"><span class="green text-center"></span></td>
                                                }
                                                @*<td scope="row"><span class="green text-center"></span></td>*@
                                                <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                                <td>@item.Status</td>

                                                <td><span class="ddtt">TBD</span></td>
                                            }
                                        }
                                    </tr>
                                }


                                @*foreach (var item in Model.TimelineMissingData)
                                    {
                                        <tr>
                                            <td scope="row"><span class="green text-center"></span></td>
                                            <td><a href="#!" title="@item.Description"><img src="~/Content/NewVersion/images/information.png" alt="info"></a></td>
                                            <td style="color:gray">@item.Status</td>
                                            <td></td>
                                        </tr>
                                    }*@
                            }
                        </tbody>
                    </table>

                </div>


                <h3 class="pdTitle">Deal Documents</h3>
                <div class="propertyBox">
                    <ul class="dealDocument prop-dealDocument">
                        <div class="tDocumentbody"> </div>
                        @if (Model.ClientDoc.Count() > 0)
                        {
                            foreach (var item in Model.ClientDoc)
                            {
                                <li>

                                    @if (@item.TrackDocFile.ToString() == ".jpg")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".jpeg")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".pdf")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/pdf.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                    @if (@item.TrackDocFile.ToString() == ".doc")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".docx")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                    @if (@item.TrackDocFile.ToString() == ".png")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" class="doc-img" />@item.FileName
                                        </a>

                                    }
                                    @if (@item.TrackDocFile.ToString() == ".txt")
                                    {
                                        <a download href="~/UploadedFiles/TrackDeal/@item.DealTrackDocID@item.TrackDocFile" target="_blank" alt="">
                                            <img src="../../../../Content/AppDashboard/assets/img/tmp/txt.png" class="doc-img" />@item.FileName
                                        </a>

                                    }

                                </li>
                            }
                        }
                    </ul>
                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" href="!#" role="button" data-toggle="modal" data-target="#DocumentModalPopUp" onclick="clearTextBox();"> Add Document </button>
                    </div>
                </div>


                @if (Model.MLSListing.Count() > 0)
                {
                    if (@Model.ClosingDate.ClosingDate != null)
                    {
                    <h3 class="pdTitle">Days to Close</h3>
                    <div class="propertyBox">
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab"
                                   aria-controls="home" aria-selected="true">Settlement</a>
                            </li>
                            @if (@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Days > 0)
                            {
                                <li class="nav-item">
                                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
                                       aria-controls="profile" aria-selected="false">Countdown</a>
                                </li>
                            }
                        </ul>
                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab">

                                <div class="dayToCloseBox">
                                    <p>@Convert.ToDateTime(Model.ClosingDate.ClosingDate).ToString("dddd")</p>
                                    <h3>@Convert.ToDateTime(Model.ClosingDate.ClosingDate).ToString("dd")</h3>
                                    <p>@Convert.ToDateTime(Model.ClosingDate.ClosingDate).ToString("MMMM")</p>
                                </div>

                            </div>
                            <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                                @*<div class="text-center bgGray">
                                    <img src="~/Content/NewVersion/images/date1.jpg" alt="">
                                    </div>*@
                                <div class="text-center bgGray" id="clockdiv">
                                    <div>
                                        <span class="days"></span>
                                        <div class="smalltext">Days</div>
                                    </div>
                                    <div>
                                        <span class="hours"></span>
                                        <div class="smalltext">Hours</div>
                                    </div>
                                    <div>
                                        <span class="minutes"></span>
                                        <div class="smalltext">Mins</div>
                                    </div>
                                    <div>
                                        <span class="seconds"></span>
                                        <div class="smalltext">Secs</div>
                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>
                    }
                }

                @** Key Date Start **@

                <h3 class="pdTitle">Key Dates</h3>
                <div class="propertyBox ">

                    <div class="widget-vend Eventlist prop-box-appnt" id="Eventlist">
                        @if (Model.AppointmentList.Count() > 0)
                        {
                            <div class="post" style="margin:0 0 10px 0">

                                <table class="table table-bordered custTableAgenda table-striped ">
                                    <tbody>
                                        <tr>
                                            <th>Date</th>
                                            <th>Description</th>
                                            <th class="actionwdth">Action</th>
                                        </tr>
                                        @foreach (var item in Model.AppointmentList)
                                        {
                                            <tr>
                                                <td>@item.Date</td>
                                                <td>@item.Description</td>
                                                <td>
                                                    @if (item.UserRole == "Client")
                                                    {
                                                        <span class="editIcons">
                                                            <a href="#!" id="editevent" title="Edit" class="sassIcon" data-Event_Id="@item.Id" data-DealEvent_Id="@item.Id"><img src="~/Content/NewVersion/images/edit-doc.png" /></a>

                                                            <a href="#!" id="deletevent" title="Delete" class="sassIcon" data-Event_Id="@item.Id"><img src="~/Content/NewVersion/images/delete-doc.png" /></a>
                                                        </span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>


                            </div>
                        }
                    </div>

                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" data-toggle="modal" data-target="#EventModalPopUp" onclick="clearTextBoxEvent();">Add Event</button>

                    </div>
                </div>



                @** Vendors **@
                <h3 class="pdTitle">Vendors</h3>
                <div class="propertyBox ">
                    <div class="vendorlist prop-box-vendor">
                        @if (Model.DealVendorList.Count() > 0)
                        {
                            foreach (var item in Model.DealVendorList)
                            {

                                <div class="vendorBox">

                                    <div class="row">
                                        <div class="col-md-10">
                                            <h4>@item.VendorType: @item.Vendor</h4>
                                            @if (!string.IsNullOrEmpty(item.VendorPhone))
                                            {
                                                <p>Ph: <a href="tel:@item.VendorPhone" style="color: #0bb7a5">@item.VendorPhone</a> </p>
                                            }
                                            @if (!string.IsNullOrEmpty(item.VendorEmail))
                                            {
                                                <p>Email: <a href="mailto:@item.VendorEmail" style="color: #0bb7a5">@item.VendorEmail</a></p>
                                            }
                                        </div>
                                        <div class="col-md-2">
                                            <div class="settingsOuter">
                                                <span class="editIcons">
                                                    @if (item.UserRole == "Client")
                                                    {
                                                        <a href="#!" id="editv" title="Edit" class="sassIcon" data-Vendor_Id="@item.Vendor_Id" data-DealVendor_Id="@item.DealVendorId"><img src="/Content/NewVersion/images/edit-doc.png" /></a>

                                                        <a href="#!" id="deletev" title="Delete" class="sassIcon" data-Vendor_Id="@item.DealVendorId"><img src="/Content/NewVersion/images/delete-doc.png" /></a>
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                    <div class="propertyBtn text-center">
                        <button type="button" class="btn btn-darkGray" data-toggle="modal" data-target="#VendorModalPopUp" onclick="clearTextBoxVendor();">Add Vendor</button>
                    </div>
                </div>


                @** **@



            </div>




        </div>
    </div>
    <!-- Steps Emd  -->

    <div class="container">
        @*** TO DO List ***@
        <div id='container_1'>
            <div class="propertyBox ">
                <h3 class="pdTitle">To-Do List</h3>
                <div class="toDOList ">
                    <form id="FormUploadToDoList_1" method="post" class="form-horizontal">
                        <div id="divMyToDoList" class="header">
                            <label class="text-danger " id="lblErrorToDoList_1" style="display:none"></label>
                            <label class="text-danger " id="lblTask_1" style="display:none;text-transform: none;">This is required</label>
                            <input type="text" id="txtTask_1" placeholder="Type here" name="Task">
                            <input onclick="return AddToDoListMobile()" class="addBtn" type="button" value="Add" />
                        </div>
                    </form>
                    <ul id="myToDoList_1" class="prop-box-tdlist"></ul>

                </div>
            </div>
        </div>
    </div>

    <div class="container">
        @if ((Model.MLSListing.Count() > 0))
        {
 <!-- p Detail S-->

            <div class="row">
                @if (Model.MstGalleryList.Count() > 0)
                {

                    <div class="col-md-12">
                        @if (Model.MstGalleryList.Count() > 0)
                    {

                            <div class="propertyBox p15 ">
                                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                    <ol class="carousel-indicators">
                                        @{ int j = 0;
                                            foreach (var item in Model.MstGalleryList)
                                            {
                                                <li data-target="#carouselExampleIndicators" data-slide-to="@j" class="@(j == 0 ? "active" : "")"></li>
                                                j = j + 1;
                                            }
                                        }
                                    </ol>
                                    <div class="carousel-inner photos">
                                        @{ int i = 0;
                                            foreach (var item in Model.MstGalleryList)
                                            {
                                                i = i + 1;

                                                <div class="carousel-item @(i == 1 ? "active" : "") photos">
                                                    <a href="/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" target="_blank">
                                                        @if (!string.IsNullOrEmpty(item.PhotoThumb))
                                                        {

                                                            <img class="d-block w-100 img-fluid" src="@item.PhotoThumb" alt="Slide @i">
                                                        }
                                                        else
                                                        {
                                                            <img class="d-block w-100" src="~/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" alt="Slide @i">
                                                        }

                                                        <div class="carousel-caption d-none d-md-block">

                                                            <p>@item.Description</p>
                                                        </div>

                                                    </a>
                                                </div>


                                            }
                                        }
                                    </div>
                                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </div>

                                @*<div id="jssor_1" style="position:relative;margin:0 auto;top:0px;left:0px;width:980px;height:580px;overflow:hidden;visibility:hidden;">
                                        <!-- Loading Screen -->

                                        <div data-u="slides" style="cursor:default;position:relative;top:0px;left:0px;width:980px;height:580px;overflow:hidden;">
                                            @foreach (var item in Model.MstGalleryList)
                                            { <div data-idle="5000">
                                                <a href="/UploadedFiles/PhotoGallery/@item.GallaryID@item.PhotoNormal" class="swipebox" title="@item.Description">
                                                    <img data-u="image" src="@item.PhotoThumb" alt="" height="580" width="350">
                                                </a>
                                                <figcaption>@item.Description</figcaption>

                                            </div>

                                            }

                                            <a data-u="any" href="https://www.jssor.com" style="display:none">slider in bootstrap</a>
                                        </div>
                                        <!-- Bullet Navigator -->
                                        <div data-u="navigator" class="jssorb053" style="position:absolute;bottom:12px;right:12px;" data-autocenter="1" data-scale="0.5" data-scale-bottom="0.75">
                                            <div data-u="prototype" class="i" style="width:16px;height:16px;">
                                                <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                                    <path class="b" d="M11400,13800H4600c-1320,0-2400-1080-2400-2400V4600c0-1320,1080-2400,2400-2400h6800 c1320,0,2400,1080,2400,2400v6800C13800,12720,12720,13800,11400,13800z"></path>
                                                </svg>
                                            </div>
                                        </div>
                                        <!-- Arrow Navigator -->
                                        <div data-u="arrowleft" class="jssora093" style="width:50px;height:50px;top:0px;left:30px;" data-autocenter="2" data-scale="0.75" data-scale-left="0.75">
                                            <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                                <circle class="c" cx="8000" cy="8000" r="5920"></circle>
                                                <polyline class="a" points="7777.8,6080 5857.8,8000 7777.8,9920 "></polyline>
                                                <line class="a" x1="10142.2" y1="8000" x2="5857.8" y2="8000"></line>
                                            </svg>
                                        </div>
                                        <div data-u="arrowright" class="jssora093" style="width:50px;height:50px;top:0px;right:30px;" data-autocenter="2" data-scale="0.75" data-scale-right="0.75">
                                            <svg viewbox="0 0 16000 16000" style="position:absolute;top:0;left:0;width:100%;height:100%;">
                                                <circle class="c" cx="8000" cy="8000" r="5920"></circle>
                                                <polyline class="a" points="8222.2,6080 10142.2,8000 8222.2,9920 "></polyline>
                                                <line class="a" x1="5857.8" y1="8000" x2="10142.2" y2="8000"></line>
                                            </svg>
                                        </div>
                                    </div>*@

                            </div>
                                            }
                    </div>


                                            }



            </div>

               <!-- p Detail E--> }
    </div>

    @** Photos  **@



    @** Tags Start **@
    <div class="container">
        <h3 class="pdTitle">Tags</h3>
        <div class="propertyBox">
            <div class="tagBox">
                @if (Model.BuildingView != null)
                {
                    @*<a href="/Client/Buildings/Details?BuildingId=@Model.BuildingView.BuildingId" target="_blank">*@
                    <a href="#!">
                        <span class="tags">Buildings</span>
                    </a>
                }
                else
                {
                    <span>No Tag Found</span>
                }
                @*<span class="tags">Neighbourhood</span>
                    <span class="tags">Article</span>
                    <span class="tags">Buildings</span>

                    <span class="tags">Article</span>
                    <span class="tags">Neighbourhood</span>
                    <span class="tags">Neighbourhood</span>


                    <span class="tags">Article</span>
                    <span class="tags">Buildings</span>*@
            </div>
        </div>
    </div>

</section>
@**************************************************************************** Mobile view End  *********************************************************************@


@*Recent change ----- Replace complete modal popup*@
<div class="modal DocumentModalPopUp" id="DocumentModalPopUp" tabindex="-1" role="dialog" aria-labelledby="myDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myDocumentModalLabel">Add/Edit Document</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <form id="FormUpload" enctype="multipart/form-data" method="post">
                    <input type="hidden" id="txtDocId" name="DocId" />
                    <input type="hidden" id="txtTransactionId" value="@ViewBag.TransactionID" name="TransactionID" />
                    <input type="hidden" id="txtClientId" value="@ViewBag.ClientID" name="ClientId" />
                    <input type="hidden" id="txtBuyerType" name="DocumentType" value="@ViewBag.TransactionType" />
                    <input type="hidden" id="txtClientDocId" name="ClientDocId" />
                    <input type="hidden" id="txtFilename" name="ExistingFile" />


                    <div class="form-group">
                        <label class="text-danger" id="lblError" style="display:none"></label>
                    </div>
                    <div class="form-group">
                        <label>Title</label>
                        <label class="text-danger" id="lblTitle" style="display:none">Title is required</label>
                        <input type="text" id="txtTitle" class="form-control" name="Title" />
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input type="text" id="txtDescription" class="form-control" name="Description" />

                    </div>
                    <div class="form-group">
                        <label>File</label>
                        <label class="text-danger" id="lblDocFile" style="display:none">File is required</label>
                        <input type="file" name="DocFile" id="flDocFile" />
                    </div>




                </form>


            </div>

            <div class="modal-footer">
                <input type="button" class="btn btn-primary" id="btnAddDocument" onclick="return AddDocument();" style="background-color: #0bb7a5; border-color:#0bb7a5" value="Save changes">
                <input type="button" class="btn btn-secondary" style="display:none;background-color: #0bb7a5; border-color:#0bb7a5" id="btnUpdateDocument" onclick="return UpdateDocument();" value="Save changes">

            </div>

        </div>
    </div>
</div>




@* Vendor Popup *@
<div class="modal DocumentModalPopUp" id="VendorModalPopUp" tabindex="-1" role="dialog" aria-labelledby="myDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myDocumentModalLabel">Add/Edit Vendor </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">


                <form id="FormUploadVendor" enctype="multipart/form-data" method="post">
                    @*<input type="hidden" id="txtDocId" name="Id" />*@
                    <input type="hidden" id="txtTransactionId" value="@ViewBag.TransactionID" name="TransactionID" />
                    <input type="hidden" id="txtClientId" value="@ViewBag.ClientID" name="ClientId" />
                    <input type="hidden" id="txtBuyerType" name="DocumentType" value="@ViewBag.TransactionType" />
                    <input type="hidden" id="txtVenId" name="Id" />
                    <input type="hidden" id="txtVenImage" name="txtVenImage" />
                    <input type="hidden" id="txtDealVendorId" name="DealVendorId" />
                    <input type="hidden" name="ListingSHA" id="ListingSHA" />
                    <input type="hidden" name="ListingCVendor" id="ListingCVendor" />

                    <div class="form-group">
                        <label class="text-danger" id="lblErrorVendor" style="display:none"></label>

                    </div>
                    <div class="row">
                        <div class="col col-new">

                            <label>Vendor Type</label>
                            <input type="text" id="VendorType" class="form-control" name="VendorType" />

                            @*@Html.DropDownList("VendorType", new SelectList(ViewBag.Vendortype, "Category_Id", "Name"), "--- Select Vendor Type --- ", new { @class = "form-control ddl-select2" })*@


                        </div>
                        <div class="col col-new">

                            <label>Vendor</label>
                            <input type="text" id="txtTitleV" class="form-control" name="txtTitleV" />


                        </div>
                    </div>
                    <div class="row">
                        <div class="col col-new">
                            <label class="text-danger" id="lblVendorType" style="display:none">Type is required</label>
                        </div>
                        <div class="col col-new">
                            <label class="text-danger" id="lblTitleV" style="display:none">Vendor is required</label>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col col-new">

                            <label>Email</label>
                            <input type="text" id="txtEmail" class="form-control" name="Email" />


                        </div>
                        <div class="col col-new">


                            <label>Phone</label>
                            <input type="text" id="txtPhone" class="form-control" name="Phone" placeholder="###.###.####" maxlength="12" />


                        </div>

                    </div>
                    <div class="row">
                        <div class="col col-new">
                            <label class="text-danger" id="lblEmailV" style="display:none">Invalid  email address</label>
                        </div>
                        <div class="col col-new">
                            <label class="text-danger" id="lblPhoneV" style="display:none">Not a valid Phone number</label>
                        </div>
                    </div>
                    <div class="additionalfield">
                        <div class="row">
                            <div class="col col-new">

                                <label>Name</label>
                                <input type="text" id="txtSubTitle" class="form-control" name="SubTitle" />


                            </div>

                            <div class="col col-new">

                                <label>Website link</label>
                                <input type="text" id="txtWebsitelink" class="form-control" name="Websitelink" />

                            </div>
                        </div>
                        <div class="row">
                            <div class="col col-new">
                                <label class="text-danger" style="display:none"></label>
                            </div>
                            <div class="col">
                                <label class="text-danger" id="lblWebsiteV" style="display:none">Please enter correct link</label>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col col-new">

                                <label>Location</label>
                                <input type="text" id="txtLocation" class="form-control" name="Location" />


                            </div>
                            <div class="col col-new">

                                <label>Image</label>
                                @*<label class="text-danger" id="lblDocFile" style="display:none">File is required</label>*@
                                <input type="file" name="VenFile" class="form-control" style="border:none" id="flVenFile" />

                            </div>

                        </div>
                        <div class="row">
                            <div class="col col-new">
                                <label class="text-danger" style="display:none"></label>
                            </div>
                            <div class="col col-new">
                                <label class="text-danger" style="display:none"></label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col col-new">

                                <label>Description</label>
                                <textarea rows="2" cols="10" id="txtAbout" class="form-control" name="About"></textarea>
                                @*<input type="text" id="txtAbout" form-control="form-control" name="About" />*@


                            </div>
                        </div>
                        <div class="row">
                            <div class="col col-new">
                                <label class="text-danger" style="display:none"></label>
                            </div>

                        </div>
                    </div>

                </form>








            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-secondary" id="btnAddVendor" onclick="return AddVendor();" style="background-color: #0bb7a5; border-color:#0bb7a5" value="Save changes" />
                <input type="button" class="btn btn-secondary" style="display:none;background-color: #0bb7a5; border-color:#0bb7a5" id="btnUpdateVendor" value="Save changes" />
            </div>
        </div>
    </div>
</div>


@* Event Popup *@


<div class="modal DocumentModalPopUp" id="EventModalPopUp" tabindex="-1" role="dialog" aria-labelledby="myDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="myDocumentModalLabel">Add / Edit Event </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                <form id="FormUploadEvent" enctype="multipart/form-data" method="post">
                    @*<input type="hidden" id="txtDocId" name="Id" />*@
                    <input type="hidden" id="txtTransactionId" value="@ViewBag.TransactionID" name="TransactionID" />
                    <input type="hidden" id="txtClientId" value="@ViewBag.ClientID" name="ClientId" />
                    <input type="hidden" id="txtBuyerType" name="DocumentType" value="@ViewBag.TransactionType" />
                    <input type="hidden" id="txtEventId" name="Id" />
                    <input type="hidden" name="ListingSHA" id="ListingSHA" />
                    @*<input type="hidden" name="ListingCVendor" id="ListingCVendor" />*@




                    <div class="form-group">
                        <label class="text-danger" id="lblErrorEvent" style="display:none"></label>
                    </div>


                    <div class="form-group">
                        <label>Event Title</label>
                        <label class="text-danger" id="lblEventTitle" style="display:none">Event title is required</label>
                        <input type="text" id="EventTitle" class="form-control" name="EventTitle" />
                    </div>


                    <div class="form-group">
                        <label>Start Date</label>
                        <label class="text-danger" id="lblStartDate" style="display:none">Start date time is required</label>

                        <input type="text" id="txtStartDate" class="form-control" name="txtStartDate" />
                    </div>




                    <div class="form-group">
                        <label>End Date</label>
                        <label class="text-danger" id="lblEndDate" style="display:none">End date time is required</label>

                        <input type="text" id="txtEndDate" class="form-control" name="txtEndDate" />
                    </div>


                    <div class="form-group">
                        <label>Repeat Every</label>
                        <div class="row">

                            <div class="col-md-4">
                                <input type="number" id="quantity" name="quantity" min="0" max="100" value="1" class="form-control tst1">
                            </div>
                            <div class="col-md-8">
                                <select name="recurringtype" id="recurringtype" class="form-control tst2">
                                    <option value="">--Select--</option>
                                    <option value="DAILY" selected="selected">Day</option>
                                    <option value="WEEKLY">Week</option>
                                    <option value="MONTHLY">Month</option>
                                    <option value="YEARLY">Year</option>
                                </select>
                            </div>
                        </div>



                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-darkGray" id="btnAddEvent" onclick="return AddEvent();" style="background-color: #0bb7a5; border-color:#0bb7a5" value="Save changes" />
                <input type="button" class="btn btn-darkGray" style="display:none;background-color: #0bb7a5; border-color:#0bb7a5" id="btnUpdateEvent" value="Save changes" />
            </div>
        </div>
    </div>
</div>




@section Scripts{
    <script>
        $(document).ready(function () {
            // Tooltip only Text
            $('.masterTooltip').hover(function () {
                // Hover over code
                var title = $(this).attr('title');
                $(this).data('tipText', title).removeAttr('title');
                $('<p class="tooltip1"></p>')
                    .text(title)
                    .appendTo('body')
                    .fadeIn('slow');
            }, function () {
                // Hover out code
                $(this).attr('title', $(this).data('tipText'));
                $('.tooltip1').remove();
            }).mousemove(function (e) {
                var mousex = e.pageX + -450; //Get X coordinates
                var mousey = e.pageY + 10; //Get Y coordinates

                $('.tooltip1')
                    .css({ top: mousey, left: mousex })
            });
        });
    </script>

    <script src="https://justbere-d4d9.kxcdn.com/Content/Plugins/swipebox/jquery.swipebox.min.js"></script>

    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script>
        function getParameterByName( name ){
            var regexS = "[\\?&]"+name+"=([^&#]*)",
          regex = new RegExp( regexS ),
          results = regex.exec( window.location.search );
            if( results == null ){
                return "";
            } else{
                return decodeURIComponent(results[1].replace(/\+/g, " "));
            }
        }

    </script>
    <script type="text/javascript">

        var TransactionID =  getParameterByName('TransactionID');
        //$(function () {
        //    $.ajax({
        //        url: '/Client/MyDeal/Chart',
        //        type: "GET",
        //        data: {
        //            TransactionID: TransactionID
        //        },
        //        dataType: "json",
        //        contentType: 'application/json; charset=utf-8',
        //        success: function (data) {
        //            // alert(data);
        //            var series = [];
        //            for (var i in data)
        //            {
        //                var serie = new Array(data[i].name, data[i].data);
        //                series.push(serie);
        //                //series.push({ name: data[i].label, data: data[i].y });

        //            }

        //            DrawPieChart(data);
        //        },
        //        error: function (xhr) {
        //            window.location.href ='/Account/Login'

        //        }
        //    });
        //});
        //function DrawPieChart(series) {
        //    var serie = [],
        //     len = series.length,
        //     i = 0;

        //    for (i; i < len; i++) {
        //        serie.push({
        //            name: [series[i].name],
        //            data: [series[i].data]
        //        });
        //    }

        //    var chart = $('#chartContainer').highcharts({
        //        chart: {
        //            type: 'bar'

        //        },
        //        colors: [
        //        '#37b6bd',
        //        '#050505',
        //        '#36387b',
        //        '#f8f8f8',
        //        '#FF6600',
        //        '#666633',
        //        '#700c62',
        //        '#9B4AE9',
        //        '#FF2134'
        //        ],
        //        credits: {
        //            enabled: false
        //        },

        //        exporting: {
        //            enabled: false
        //        },
        //        yAxis: {
        //            min: 0,
        //            max: 100,
        //            title: {
        //                text: '% Completion'
        //            }
        //        },
        //        tooltip: {
        //            formatter: function() {
        //                return this.series.name;
        //            }
        //        },
        //        xAxis: {
        //            min: 0,
        //            gridLineWidth: 0,
        //            labels: { enabled: false },
        //            lineColor: 'transparent',
        //        },
        //        title: {
        //            text: 'Timeline'
        //        },

        //        legend: {
        //            reversed: true
        //        },
        //        plotOptions: {
        //            series: {
        //                stacking: 'normal',
        //                showInLegend: false,
        //            },
        //            dataLabels: {

        //                format: '150 / 600',
        //                enabled: true,
        //                align: 'right',
        //                style: {
        //                    color: 'white',
        //                    textOutline: false,
        //                }
        //            }
        //        },


        //        series: serie


        //    });
        //    $(window).resize(function(){
        //        var chart = $('#chartContainer').highcharts();
        //        var w = $('#chartContainer').closest(".wrapper").width()
        //        var h = $('#chartContainer').closest(".wrapper").height()
        //        chart.setSize(
        //            h,w * (3/4),false
        //        );
        //    });

        //}
    </script>
    <script>
        (function($) {

            $('.swipebox' ).swipebox( {
                useCSS : true,
                useSVG : true,
                initialIndexOnArray : 0,
                hideCloseButtonOnMobile : false,
                removeBarsOnMobile : true,
                hideBarsDelay : 3000,
                videoMaxWidth : 1140,
                beforeOpen: function() {},
                afterOpen: null,
                afterClose: function() {},
                loopAtEnd: false
            } );



        } )(jQuery);
    </script>
    <script type="text/javascript">
        $( document ).ready(function() {
            $( '.swipebox-video' ).swipebox();
        });
    </script>
    <script>
        function getTimeRemaining(endtime) {

            var t = Date.parse(endtime) - Date.parse(new Date());
            var seconds = Math.floor((t / 1000) % 60);
            var minutes = Math.floor((t / 1000 / 60) % 60);
            var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
            var days = Math.floor(t / (1000 * 60 * 60 * 24));
            return {
                'total': t,
                'days': days,
                'hours': hours,
                'minutes': minutes,
                'seconds': seconds
            };
        }
        function initializeClock(id, endtime) {
            var clock = document.getElementById(id);
            var daysSpan = clock.querySelector('.days');
            var hoursSpan = clock.querySelector('.hours');
            var minutesSpan = clock.querySelector('.minutes');
            var secondsSpan = clock.querySelector('.seconds');
            function updateClock() {
                var t = getTimeRemaining(endtime);
                var day = @Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Days;
                daysSpan.innerHTML = day;
                hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
                if (t.total <= 0) {
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            var timeinterval = setInterval(updateClock, 1000);
        }
        @*var day =@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Days;
        var h =@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Hours.ToString();
        var m =@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Minutes.ToString();
        var s =@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(@DateTime.Now).Seconds.ToString();*@
        var deadline = new Date(Date.parse(new Date(@Convert.ToDateTime(@Model.ClosingDate.ClosingDate).Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds)));
        var $clockDiv = $('#clockdiv');

        if ( $clockDiv.length){
            initializeClock('clockdiv', deadline);
        }
    </script>

    @*<script src="https://justbere-d4d9.kxcdn.com/Content/Plugins/aslider/jssor.slider-26.1.5.min.js"></script>
        <script type="text/javascript">
            jssor_1_slider_init = function() {

                var jssor_1_SlideshowTransitions = [
                  {$Duration:500,$Delay:30,$Cols:8,$Rows:4,$Clip:15,$SlideOut:true,$Formation:$JssorSlideshowFormations$.$FormationStraightStairs,$Assembly:2049,$Easing:$Jease$.$OutQuad},
                  {$Duration:500,$Delay:80,$Cols:8,$Rows:4,$Clip:15,$SlideOut:true,$Easing:$Jease$.$OutQuad},
                  {$Duration:1000,x:-0.2,$Delay:40,$Cols:12,$SlideOut:true,$Formation:$JssorSlideshowFormations$.$FormationStraight,$Assembly:260,$Easing:{$Left:$Jease$.$InOutExpo,$Opacity:$Jease$.$InOutQuad},$Opacity:2,$Outside:true,$Round:{$Top:0.5}},
                  {$Duration:2000,y:-1,$Delay:60,$Cols:15,$SlideOut:true,$Formation:$JssorSlideshowFormations$.$FormationStraight,$Easing:$Jease$.$OutJump,$Round:{$Top:1.5}},
                  {$Duration:1200,x:0.2,y:-0.1,$Delay:20,$Cols:8,$Rows:4,$Clip:15,$During:{$Left:[0.3,0.7],$Top:[0.3,0.7]},$Formation:$JssorSlideshowFormations$.$FormationStraightStairs,$Assembly:260,$Easing:{$Left:$Jease$.$InWave,$Top:$Jease$.$InWave,$Clip:$Jease$.$OutQuad},$Round:{$Left:1.3,$Top:2.5}}
                ];

                var jssor_1_options = {
                    $AutoPlay: 1,
                    $SlideshowOptions: {
                        $Class: $JssorSlideshowRunner$,
                        $Transitions: jssor_1_SlideshowTransitions,
                        $TransitionsOrder: 1
                    },
                    $ArrowNavigatorOptions: {
                        $Class: $JssorArrowNavigator$
                    },
                    $BulletNavigatorOptions: {
                        $Class: $JssorBulletNavigator$
                    }
                };

                var jssor_1_slider = new $JssorSlider$("jssor_1", jssor_1_options);

                /*#region responsive code begin*/

                var MAX_WIDTH = 500;

                function ScaleSlider() {
                    var containerElement = jssor_1_slider.$Elmt.parentNode;
                    var containerWidth = containerElement.clientWidth;
                    if (containerWidth) {

                        var expectedWidth = Math.min(MAX_WIDTH || containerWidth, containerWidth);

                        jssor_1_slider.$ScaleWidth(expectedWidth);

                    }
                    else {
                        window.setTimeout(ScaleSlider, 30);
                    }
                }

                ScaleSlider();

                $Jssor$.$AddEvent(window, "load", ScaleSlider);
                $Jssor$.$AddEvent(window, "resize", ScaleSlider);
                $Jssor$.$AddEvent(window, "orientationchange", ScaleSlider);
                /*#endregion responsive code end*/
            };
        </script>
        <script type="text/javascript">jssor_1_slider_init();</script>*@



    @*----------------------------------- Add Document Script---------------------------------*@

    <script>
        function getExtension(filename) {
            return filename.split('.').pop().toLowerCase();
        }


        $(document).ready(function () {

            loadData();
        });

        //Load Data function    Recent change replace loaddata()
        function loadData() {
            $.ajax({
                url: "/MyDeal/ClientDealDocumentList",
                type: "GET",
                data: {
                    TransactionID: TransactionID
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var html = '';
                    $.each(result, function (key, item) {
                        //html += '<div class="listing-small ">'
                        //html +='<div class="listing-small-inner">'
                        //html += '<div class="listing-small-image">';
                        //html += '  <a download href="~/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank" style="background-image: url(../../../../Content/AppDashboard/assets/img/tmp/doc.png);"> </a>';
                        //html += '</div>';
                        //html += '<div class="listing-small-content">';

                        //html += '<h3><a class="sassText" download href="~/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank">'+item.Title+'</a><a href="#!" title="Edit" class="sassIcon" id="aEditDoc" data-ClientDocId="'+item.ClientDocId+'"  onclick="return getClientDocumentByID('+ item.DocId +')"> <img src="/img/edit-doc.png" /></a> <a href="#!" title="Delete" class="sassIcon" id="aDeleteDoc" data-ClientDocId="'+item.ClientDocId+'"   onclick="DeleleDocument()"> <img src="/img/delete-doc.png" /></a></h3>';

                        //html += '</h3>';
                        //html += '</div>';
                        //html += '</div>';
                        //html += '</div>';
                        switch(getExtension(item.DocFile)) {

                            case 'jpg':case 'jpeg':case 'png':
                                html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/jpeg.png" alt="" class="doc-img" > '+item.Title+' </a>'
                                break;

                            case 'doc':case 'docx':
                                html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" alt="" class="doc-img" > '+item.Title+' </a>'
                                break;

                            case 'pdf':
                                html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/pdf.png" alt="" class="doc-img" > '+item.Title+' </a>'
                                break;
                            case 'txt':
                                html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/txt.png" alt="" class="doc-img" > '+item.Title+' </a>'
                                break;
                            default:
                                html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" alt="" class="doc-img" > '+item.Title+' </a>'

                        }
                        //html += '<li><a download href="/UploadedFiles/TrackDeal/'+item.DocFile+'" target="_blank"><img src="../../../../Content/AppDashboard/assets/img/tmp/doc.png" alt="" class="doc-img" > '+item.Title+' </a>'
                        html +='<div class="settingsOuter">'
                        html += ' <span class="editIcons">';
                        html +=    '<a href="#!"  title="Edit" class="sassIcon" id="aEditDoc" data-ClientDocId="'+item.ClientDocId+'"  onclick="return getClientDocumentByID('+ item.DocId +')"><img src="/Content/NewVersion/images/edit-doc.png"></a>';
                        html += '    <a href="#!"  title="Delete" class="sassIcon" id="aDeleteDoc" data-ClientDocId="'+item.ClientDocId+'"   onclick="DeleleDocument()"><img src="/Content/NewVersion/images/delete-doc.png"></a>';
                        html += ' </span>';
                        html += '  </div>';
                        html += '   </li>';

                    });
                    $("#ajaxLoading").css("display", "none");
                    $("#ajax-backdrop").css("display", "none");
                    $('.tDocumentbody').html("");
                    $('.tDocumentbody').html(html);
                    $('.modal-backdrop').remove();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //Add Data Function
        function AddDocument() {
            var res = validate();
            if (res == false) {
                return false;
            }
            var form = $('#FormUpload')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/AddClientDealDocument",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //    alert(result) remove alert
                    if(result=="0"){
                        loadData();
                        $('#DocumentModalPopUp').modal('hide');
                        $('#lblError').css('display','none')
                    }
                    else{

                        $('#lblError').css('display','block')
                        $('#lblError').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblError').css('display','block');
                    $('#lblError').text('Sorry, Something went wrong. Please try again.');
                    //alert(errormessage.responseText);
                }
            });
        }

        //Function for getting the Data Based upon Document ID
        function getClientDocumentByID(Id) {
            $('#txtDocId').val("");
            $('#txtClientDocId').val();
            $('#txtTitle').val("");
            $('#txtDescription').val("");
            $('#flDocFile').val("");
            $('#lblTitle').css('display', 'none');
            $('#lblDocFile').css('display', 'none');
            $('#lblError').css('display','none')
            var ClientDocId= $("#aEditDoc").attr("data-ClientDocId")
            $.ajax({
                url: "/MyDeal/GetClientDealDocumentByID",
                data: {
                    ID: Id,
                    ClientDocId:ClientDocId
                },
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    $('#txtDocId').val(result.DocId);
                    $('#txtClientDocId').val(ClientDocId);
                    $('#txtTitle').val(result.Title);
                    $('#txtDescription').val(result.Description);
                    $('#txtFilename').val(result.DocFile);


                    $('#DocumentModalPopUp').modal('show');
                    $('#btnUpdateDocument').show();
                    $('#btnAddDocument').hide();
                },
                error: function (errormessage) {
                    $('#lblError').css('display','block');
                    $('#lblError').text('Sorry, Something went wrong. Please try again.');
                }
            });
            return false;
        }

        //function for updating document
        function UpdateDocument() {
            var res = validate();
            if (res == false) {
                return false;
            }
            var form = $('#FormUpload')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/UpdateClientDealDocument",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    if(result=="0"){
                        loadData();
                        $('#DocumentModalPopUp').modal('hide');
                        $('#txtDocId').val("");
                        $('#txtClientDocId').val("");
                        $('#txtTitle').val("");
                        $('#txtDescription').val("");
                        $('#txtFilename').val("");
                        $('#lblError').css('display','none')
                    }
                    else{

                        $('#lblError').css('display','block')
                        $('#lblError').text(result)
                    }
                },
                error: function (errormessage) {
                    $('#lblError').css('display','block');
                    $('#lblError').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //function for deleting employee's record
        function DeleleDocument() {
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                var ID= $("#aDeleteDoc").attr("data-clientdocid")
                $.ajax({
                    url: "/MyDeal/DeleteClientDealDocument/" + ID,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {

                        loadData();
                    },
                    error: function (errormessage) {
                        alert('Sorry, Something went wrong. Please try again.');
                    }
                });
            }
        }

        //Function for clearing the textboxes
        function clearTextBox() {
            $('#txtDocId').val("");
            $('#txtTitle').val("");
            $('#txtDescription').val("");
            $('#flDocFile').val("");
            $('#btnUpdateDocument').hide();
            $('#btnAddDocument').show();
            $('#lblTitle').css('display', 'none');
            $('#lblDocFile').css('display', 'none');
            $('#lblError').css('display','none')
        }
        //Valdidation using jquery
        function validate() {
            var isValid = true;
            if ($('#txtTitle').val().trim() == "") {
                $('#lblTitle').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblTitle').css('display', 'none');
            }

            if ($('#flDocFile').val() == "" && $('#txtDocId').val() == "") {
                $('#lblDocFile').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblDocFile').css('display', 'none');
            }

            return isValid;
        }
    </script>

    @*----------------------------------- Add Document Script---------------------------------*@

    @*--------------- Add Vendor Script --------------*@




    <script>

        //Load Data function
        function loadDataV() {
            $.ajax({
                url: "/MyDeal/ClientVendorList",
                type: "GET",
                data: {
                    TransactionID: TransactionID
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#ajaxLoading").css("display", "block");
                    $("#ajaxLoading").css("top", $(window).height() / 1.8);
                    $("#ajaxLoading").css("left", $(window).width() / 2);
                    $("#ajaxLoading").css("position", "fixed");
                    $("#ajax-backdrop").css("display", "block");
                    //$(".phone-email-div").css("display", "block")
                    var html = '';
                    $.each(result, function (key, item) {
                        html += '<div class="vendorBox">';

                        html += '<div class="row">';
                        html += '<div class="col-md-10">';
                        html += '<h4>'+item.VendorType+': '+ item.Vendor +'</h4>';
                        if (item.VendorPhone.length > 0)
                        {
                            html += ' <p>Ph: <a href="tel:'+item.VendorPhone+'" style="color: #0bb7a5">'+item.VendorPhone+'</a> </p>';
                        }
                        if (item.VendorEmail.length > 0)
                        {
                            html += '<p>Email: <a href="mailto:'+item.VendorEmail+'" style="color: #0bb7a5">'+item.VendorEmail+'</a></p>';
                        }
                        html += '</div>';
                        html += ' <div class="col-md-2">';
                        html += ' <div class="settingsOuter">';
                        html += ' <span class="editIcons">';
                        if(item.UserRole == "Client")
                        {
                            html += '<a href="#!" id="editv" title="Edit" class="sassIcon" data-Vendor_Id="'+item.Vendor_Id+'" data-DealVendor_Id="'+item.DealVendorId+'"><img src="/Content/NewVersion/images/edit-doc.png" /></a>';

                            html += ' <a href="#!" id="deletev" title="Delete" class="sassIcon" data-Vendor_Id="'+item.DealVendorId+'"><img src="/Content/NewVersion/images/delete-doc.png" /></a>';
                        }
                        html += ' </span>';
                        html += '  </div>';
                        html += '</div>';
                        html += '  </div>'
                        html += '   </div>';
                    });



                    $('.vendorlist').html("");
                    $('.vendorlist').html(html);
                    $("#ajaxLoading").css("display", "none");
                    $("#ajax-backdrop").css("display", "none");
                    $('.modal-backdrop').remove();
                },
                error: function (errormessage) {
                    $('#lblErrorVendor').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }
        //Add Data Function
        function AddVendor() {
            $(".additionalfield").css("display","none");

            var res = validateVendor();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadVendor')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/AddClientDealVendor",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //$("#vendorlist").html(result);
                    if(result=="0"){
                        loadDataV();
                        $('#VendorModalPopUp').modal('hide');
                        $('#lblErrorVendor').css('display','none')
                    }
                    else{

                        $('#lblErrorVendor').css('display','block')
                        $('#lblErrorVendor').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorVendor').css('display','block');
                    $('#lblErrorVendor').text('Sorry, Something went wrong. Please try again.');
                    //alert(errormessage.responseText);
                }
            });
        }


        //Function for getting the Data Based upon Document ID
        function getClientVendorByID(Id) {

            $(".additionalfield").css("display","block");

            $('#VendorType').val("");
            $('#txtTitleV').val("");
            $('#txtSubTitle').val("");
            $('#txtAbout').val("");
            $('#txtEmail').val("");
            $('#txtWebsitelink').val("");
            $('#txtPhone').val("");
            $('#txtLocation').val("");
            $('#txtVenId').val("");
            $('#txtVenImage').val("");
            $('#flVenFile').val("");
            //$('#lblTitle').css('display', 'none');
            //$('#lblDocFile').css('display', 'none');
            $('#lblErrorVendor').css('display','none')
            $.ajax({
                url: "/MyDeal/GetClientDealVendorByID/" + Id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    $('#VendorType').val(result.Category_Name);
                    $('#txtTitleV').val(result.Title);
                    $('#txtSubTitle').val(result.SubTitle);
                    $('#txtAbout').val(result.About);
                    $('#txtEmail').val(result.Email);
                    $('#txtWebsitelink').val(result.WebsiteLink);
                    $('#txtPhone').val(result.Phone);
                    $('#txtLocation').val(result.Location);
                    $('#txtVenId').val(result.VendorId);
                    $('#txtVenImage').val(result.VendorImage);
                    $('#lblTitleV').css('display', 'none');
                    $('#lblVendorType').css('display', 'none');
                    $('#lblVendorType').css('display', 'none');
                    $('#lblEmailV').css('display', 'none');
                    $('#lblPhoneV').css('display', 'none');
                    $('#lblWebsiteV').css('display', 'none');

                    $('#VendorModalPopUp').modal('show');
                    $('#btnUpdateVendor').show();
                    $('#btnAddVendor').hide();
                },
                error: function (errormessage) {
                    $('#lblErrorVendor').css('display','block');
                    $('#lblErrorVendor').text('Sorry, Something went wrong. Please try again.');
                }
            });
            return false;
        }

        //function for updating document
        function UpdateVendor() {
            var res = validateVendor();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadVendor')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/UpdateClientDealVendor",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {

                    if(result=="0"){
                        loadDataV();
                        $('#VendorModalPopUp').modal('hide');
                        $('#VendorType').val("");
                        $('#txtTitleV').val("");
                        $('#txtSubTitle').val("");
                        $('#txtAbout').val("");
                        $('#txtEmail').val("");
                        $('#txtWebsitelink').val("");
                        $('#txtPhone').val("");
                        $('#txtLocation').val("");
                        $('#txtVenId').val("");
                        $('#txtVenImage').val("");
                        $('#flVenFile').val("");
                        $('#lblErrorVendor').css('display','none')
                    }
                    else{
                        $('#lblErrorVendor').css('display','block')
                        $('#lblErrorVendor').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorVendor').css('display','block');
                    $('#lblErrorVendor').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }
        $(function(){
            $(document).off('click', '#deletev').on('click', '#deletev', function () {
                //$("#deletev").on("click", function(){

                //    alert();
                var id= $(this).attr("data-Vendor_Id");
                DeleleVendor(id);
            })
            $(document).off('click', '#editv').on('click', '#editv', function () {
                //$("#editv").on("click", function(){
                $('#txtDealVendorId').val('');
                $(".additionalfield").css("display","block");

                var id= $(this).attr("data-Vendor_Id");
                $('#txtDealVendorId').val($(this).attr("data-DealVendor_Id"))
                getClientVendorByID(id);
            })
            $(document).off('click', '#btnUpdateVendor').on('click', '#btnUpdateVendor', function () {

                UpdateVendor();
            })
            //editv
        })


        //function for deleting employee's record
        function DeleleVendor(ID) {
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                $.ajax({
                    url: "/MyDeal/DeleteClientDealVendor/" + ID,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {

                        loadDataV();
                    },
                    error: function (errormessage) {

                        alert('Sorry, Something went wrong. Please try again.');
                    }
                });
            }
        }

        //Function for clearing the textboxes
        function clearTextBoxVendor() {
            $(".additionalfield").css("display","none");
            $('#VendorType').val("");
            $('#txtTitleV').val("");
            $('#txtSubTitle').val("");
            $('#txtAbout').val("");
            $('#txtEmail').val("");
            $('#txtWebsitelink').val("");
            $('#txtPhone').val("");
            $('#txtLocation').val("");
            $('#txtVenId').val("");
            $('#txtVenImage').val("");
            $('#flVenFile').val("");
            $('#btnUpdateVendor').hide();
            $('#btnAddVendor').show();
            $('#lblTitleV').css('display', 'none');
            $('#lblVendorType').css('display', 'none');
            $('#lblVendorType').css('display', 'none');
            $('#lblEmailV').css('display', 'none');
            $('#lblPhoneV').css('display', 'none');
            $('#lblWebsiteV').css('display', 'none');
            $('#lblErrorVendor').css('display','none')
        }
        //Valdidation using jquery
        function validateVendor() {
            var isValid = true;
            if ($('#VendorType').val().trim() == "") {
                $('#lblVendorType').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblVendorType').css('display', 'none');
            }

            if ($('#txtTitleV').val().trim() == "") {
                $('#lblTitleV').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblTitleV').css('display', 'none');
            }


            if ($('#txtEmail').val() != "") {

                if (!ValidateEmail($("#txtEmail").val())) {
                    $('#lblEmailV').css('display', 'block');
                    isValid = false;
                }
                else {
                    $('#lblEmailV').css('display', 'none');
                }


            }
            else {
                $('#lblEmailV').css('display', 'none');
            }




            if ($('#txtPhone').val() != "") {
                console.log($('#txtPhone').val());
                console.log($('#txtPhone').val().length);
                if($('#txtPhone').val().length<12){
                    $('#lblPhoneV').css('display', 'block');
                    isValid = false;
                }
                else {
                    $('#lblPhoneV').css('display', 'none');
                }


            }
            else {
                $('#lblPhoneV').css('display', 'none');
            }


            if ($('#txtWebsitelink').val() != "") {

                if (!is_valid_url($("#txtWebsitelink").val())) {
                    $('#lblWebsiteV').css('display', 'block');
                    isValid = false;
                }
                else {


                    $('#lblWebsiteV').css('display', 'none');
                }


            }
            else {
                $('#lblWebsiteV').css('display', 'none');
            }

            return isValid;
        }

        function ValidateEmail(email) {
            var expr =/^([\w-\.]+@@([\w-]+\.)+[\w-]{2,6})?$/
            return expr.test(email);
        };



        function is_valid_url(url)
        {
            return /^(http(s)?:\/\/)?(www\.)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test(url);
        }


        $('#txtPhone').keydown(function (e) {
            var key = e.which || e.charCode || e.keyCode || 0;
            $phone = $(this);

            // Don't let them remove the starting '('


            // Auto-format- do not expose the mask as the user begins to type
            if (key !== 8 && key !== 9) {
                if ($phone.val().length === 3) {
                    $phone.val($phone.val() + '.');
                }
                if ($phone.val().length === 7) {
                    $phone.val($phone.val() + '.');
                }

            }

            // Allow numeric (and tab, backspace, delete) keys only
            return (key == 8 ||
                    key == 9 ||
                    key == 46 ||
                    (key >= 48 && key <= 57) ||
                    (key >= 96 && key <= 105));
        })

             .bind('focus click', function () {
                 $phone = $(this);


             })

             .blur(function () {
                 $phone = $(this);


             });

    </script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    @* ----------------Add Event Script---------- *@
    <script src="https://justbere-d4d9.kxcdn.com/Scripts/moment.min.js"></script>
    @*<script src="https://justbere-d4d9.kxcdn.com/Scripts/bootstrap-datetimepicker.min.js"></script>*@

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    @* datepicker *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.css" type="text/css">
    @*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.js"></script>

    <script type="text/javascript">
        $(function () {
            jQuery('#txtStartDate').datetimepicker({
                minDate: new Date(),
                format:"Y/m/d h:i A",

                validateOnBlur: false,
                //format:'Y/mm/dd h:i a',
                formatTime:"h:i a",
                step:60,
                onShow:function( ct ){
                    this.setOptions({
                        maxDate:jQuery('#txtEndDate').val()?jQuery('#txtEndDate').val():false
                    })
                },
                timepicker:true
            });
            jQuery('#txtEndDate').datetimepicker({
                format:"Y/m/d h:i A",
                formatTime:"h:i a",
                validateOnBlur: false,
                step:60,
                onShow:function( ct ){
                    this.setOptions({
                        minDate:jQuery('#txtStartDate').val()?jQuery('#txtStartDate').val():false
                    })
                },
                timepicker:true
            });
            // $("#txtStartDate").datetimepicker();
            //jQuery('#txtStartDate').datetimepicker({
            //    minDate: new Date(),

            //}).on("change", function (e) {
            //    $('#txtEndDate').data("datetimepicker").minDate(e.date);
            //});
            //$("#txtEndDate").datetimepicker({ minDate: new Date(),
            //    useCurrent: false}).on("change", function (e) {
            //        $('#txtStartDate').data("datetimepicker").maxDate(e.date);
            //        });

        });
    </script>
    <script type="text/javascript">

        //Load Data function
        function loadDataE() {
            $.ajax({
                url: "/MyDeal/ClientEventList",
                type: "GET",
                data: {
                    TransactionID: TransactionID
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#ajaxLoading").css("display", "block");
                    $("#ajaxLoading").css("top", $(window).height() / 1.8);
                    $("#ajaxLoading").css("left", $(window).width() / 2);
                    $("#ajaxLoading").css("position", "fixed");
                    $("#ajax-backdrop").css("display", "block");
                    //$(".phone-email-div").css("display", "block")
                    var html = '';
                    html += '<div class="post" style="margin:0 0 10px 0">'
                    html += '<table class="table table-bordered custTableAgenda table-striped ">'
                    html += '<tbody>'
                    html += '<tr>'
                    html += '<th>Date</th>'
                    html += '<th>Description</th>'
                    html += '<th class="actionwdth">Action</th>'
                    html += '</tr>'
                    $.each(result, function (key, item) {


                        html += '<tr>'
                        html += '<td>'+item.Date +'</td>'
                        html += '<td>'+item.Description +'</td>'
                        html += '<td>'

                        if(item.UserRole == "Client")
                        {        html += '<span class="editIcons">'
                            html += '<a href="#!" id="editevent" title="Edit" class="sassIcon" data-DealEvent_Id="'+item.Id+'" data-Event_Id="'+item.Id+'"><img src="/img/edit-doc.png" /></a>';
                            html += '<a href="#!" id="deletevent" title="Delete" class="sassIcon" data-Event_Id="'+item.Id+'"><img src="/img/delete-doc.png" /></a>';
                            html += '</span>'
                        }
                        html += '</td>'
                        html += '</tr>'

                    });
                    html += '</tbody>'
                    html += '</table>';
                    html += '</div>';
                    if(result.length > 0)
                    {
                        $('.Eventlist').html("");
                        $('.Eventlist').html(html);
                    }
                    else{ $('.Eventlist').html("");}
                    $("#ajaxLoading").css("display", "none");
                    $("#ajax-backdrop").css("display", "none");
                    $('.modal-backdrop').remove();
                },
                error: function (errormessage) {
                    $('#lblErrorVendor').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }
        $(function () {

            $('#EventTitle').autocomplete({
                source: function (request, response) {
                    //$("#ajaxLoading").attr("style", "display: none");
                    //$("#ajax-backdrop").attr("style", "display: none");
                    var itemnamecodes = new Array();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("autocompleteEvent", "MyDeal")',
                        dataType: 'json',
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                console.log(item);
                                return { label: item.Value, Id: item.Key };
                            }))
                        }
                    })
                },
                minLength: 0,

                select: function (e, i) {
                    $("#ListingSHA").val(i.item.Value);


                }
            }).focus(function() {
                $(this).autocomplete("search", "");
                $('#EventTitle').autocomplete({
                    autoFocus: true
                })
            });
        });

        //Add Data Function
        function AddEvent() {

            var res = validateEvent();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadEvent')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/AddClientDealEvent",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //$("#vendorlist").html(result);
                    if(result=="0"){

                        $('#EventModalPopUp').modal('hide');
                        $('#lblErrorEvent').css('display','none')
                        loadDataE();

                    }
                    else{

                        $('#lblErrorEvent').css('display','block')
                        $('#lblErrorEvent').text('Sorry, Something went wrong. Please try again.');
                        console.log(result);
                    }




                },
                error: function (errormessage) {
                    $('#lblErrorEvent').css('display','block');
                    $('#lblErrorEvent').text(errormessage);
                    //alert(errormessage.responseText);
                }
            });

        }


        //Function for getting the Data Based upon Document ID
        function getClientEventByID(Id) {


            clearTextBoxEvent();
            $.ajax({
                url: "/MyDeal/GetClientDealEventByID/" + Id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    $('#EventTitle').val(result.Description);
                    var date = /Date(1297246301973)/;
                    var parsedStartDate = new Date(parseInt(result.StartDate.toString().substr(6)));
                    var parsedEndDate = new Date(parseInt(result.EndDate.toString().substr(6)));
                    var dt = moment(new Date(result.StartDate)).format('YYYY/MM/DD h:mm a');


                    $('#txtEventId').val(result.Id);
                    $('#txtStartDate').val(dt);
                    $('#txtEndDate').val(moment(new Date(result.EndDate)).format('YYYY/MM/DD h:mm a'));
                    //$('#txtEndDate').val(format(new Date(result.EndDate),"yyyy/MM/dd HH:mm"));
                    $("#quantity").val(result.RepeatInterval);
                    $("#recurringtype").val(result.RepeatFrequency);

                    $('#lblEventTitle').css('display', 'none');
                    $('#lblStartDate').css('display', 'none');
                    $('#lblEndDate').css('display', 'none');


                    $('#EventModalPopUp').modal('show');
                    $('#btnUpdateEvent').show();
                    $('#btnAddEvent').hide();
                },
                error: function (errormessage) {
                    $('#lblErrorEvent').css('display','block');
                    $('#lblErrorEvent').text('Sorry, Something went wrong. Please try again.');
                }
            });
            return false;
        }
        var format = function (time, format) {
            var t = new Date(time);
            var tf = function (i) { return (i < 10 ? '0' : '') + i };
            return format.replace(/yyyy|MM|dd|HH|mm|ss/g, function (a) {
                switch (a) {
                    case 'yyyy':
                        return tf(t.getFullYear());
                        break;
                    case 'MM':
                        return tf(t.getMonth() + 1);
                        break;
                    case 'mm':
                        return tf(t.getMinutes());
                        break;
                    case 'dd':
                        return tf(t.getDate());
                        break;
                    case 'HH':
                        return tf(t.getHours());
                        break;
                    case 'ss':
                        return tf(t.getSeconds());
                        break;
                }
            })
        }




        //function for updating document
        function UpdateEvent() {
            var res = validateEvent();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadEvent')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/UpdateClientDealEvent",
                data:dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    loadDataE();
                    if(result=="0"){

                        $('#EventModalPopUp').modal('hide');
                        $('#EventTitle').val("");
                        $('#txtStartDate').val("");
                        $('#txtEndDate').val("");

                        $('#lblErrorEvent').css('display','none')
                    }
                    else{
                        $('#lblErrorEvent').css('display','block')
                        $('#lblErrorEvent').text('Sorry, Something went wrong. Please try again.')
                        console.log(result);
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorEvent').css('display','block');
                    $('#lblErrorEvent').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }
        $(function(){
            $(document).off('click', '#deletevent').on('click', '#deletevent', function () {
                //$("#deletev").on("click", function(){

                //    alert();
                var id= $(this).attr("data-Event_Id");
                DeleleEvent(id);
            })
            $(document).off('click', '#editevent').on('click', '#editevent', function () {
                //$("#editv").on("click", function(){
                //$('#txtDealVendorId').val('');
                //$(".additionalfield").css("display","block");

                var id= $(this).attr("data-Event_Id");
                //    $('#txtDealVendorId').val($(this).attr("data-DealVendor_Id"))
                getClientEventByID(id);
            })
            $(document).off('click', '#btnUpdateEvent').on('click', '#btnUpdateEvent', function () {

                UpdateEvent();
            })
            //editv
        })


        //function for deleting employee's record
        function DeleleEvent(ID) {
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                $.ajax({
                    url: "/MyDeal/DeleteClientDealEvent/" + ID,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {

                        loadDataE();
                    },
                    error: function (errormessage) {

                        alert('Sorry, Something went wrong. Please try again.');
                    }
                });
            }
        }

        //Function for clearing the textboxes
        function clearTextBoxEvent() {

            $('#EventTitle').val("");
            $('#txtStartDate').val("");
            $('#txtEndDate').val("");
            $('#btnUpdateEvent').hide();
            $('#btnAddEvent').show();
            $('#lblEventTitle').css('display', 'none');
            $('#lblStartDate').css('display', 'none');
            $('#lblEndDate').css('display', 'none');
            $('#lblErrorEvent').css('display', 'none');

        }
        //Valdidation using jquery
        function validateEvent() {
            var isValid = true;
            if ($('#EventTitle').val().trim() == "") {
                $('#lblEventTitle').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblEventTitle').css('display', 'none');
            }

            if ($('#txtStartDate').val().trim() == "") {
                $('#lblStartDate').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblStartDate').css('display', 'none');
            }

            if ($('#txtEndDate').val().trim() == "") {
                $('#lblEndDate').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblEndDate').css('display', 'none');
            }






            return isValid;
        }
    </script>
    <script>
        //$("#datetimepicker1").on("dp.change", function (e) {
        //    $('#datetimepicker2').data("DateTimePicker").minDate(e.date);
        //});
        //$("#datetimepicker2").on("dp.change", function (e) {
        //    $('#datetimepicker1').data("DateTimePicker").maxDate(e.date);
        //});






    </script>
    @*----------- To Do List  -------------------------------------*@

    @*<script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>*@
    <script>

        //var ClientId = getParameterByName('ClientId');
        //function getParameterByName(name) {
        //    var regexS = "[\\?&]" + name + "=([^&#]*)",
        //  regex = new RegExp(regexS),
        //  results = regex.exec(window.location.search);
        //    if (results == null) {
        //        return "";
        //    } else {
        //        return decodeURIComponent(results[1].replace(/\+/g, " "));
        //    }
        //}


        $(document).ready(function () {
            clearToDoList();
            loadToDoList();
        });

        function loadToDoList() {
            $.ajax({
                url: "/MyDeal/BindToDoList?TransactionID="+TransactionID,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var html = '';
                    $.each(result, function (key, item) {

                        if (item.IsDone == false) {
                            html +='<li>'
                        }
                        else{
                            html +='<li class="checked">'
                        }
                        if (item.IsDone == false) {
                            html +='<input type="checkbox" onclick="MarkAsRead(' + item.Id + ',' + true + ')"><span id="lblName">'+item.Task+'</span><input type = "text" style="display:none" class="form-control" />'
                        }
                        else{
                            html +='<input type="checkbox" checked onclick="MarkAsRead(' + item.Id + ',' + false + ')"><span id="lblName">'+item.Task+'</span><input type = "text" style="display:none"  class="form-control" />'
                        }


                        html +='<span class="editIcons">'
                        html +='<a href="#!" onclick="editable(this,' + item.Id + ')" title="edit" class="sassIcon" ><img src="/Content/NewVersion/images/edit-doc.png"></a>'
                        html +='<a href="#!" onclick="DeleleToDoList(' + item.Id + ')" title="delete" class="sassIcon" ><img src="/Content/NewVersion/images/delete-doc.png"></a>'
                        html +=' </span>'
                        html +='</div>'
                        html +='</li>'
                    });

                    $('#myToDoList').html(html);
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //Add Data Function
        function AddToDoList() {
            var res = validateToDoList();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadToDoList')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/AddToDoList?TransactionID="+TransactionID,
                data: dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //    alert(result) remove alert
                    if (result == "0") {
                        loadToDoList();
                        clearToDoList();
                    }
                    else {
                        $('#lblErrorToDoList').css('display', 'block')
                        $('#lblErrorToDoList').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorToDoList').css('display', 'block');
                    $('#lblErrorToDoList').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }


        //Add Data Function
        function EditToDoList(task,Id) {
            //var res = validateToDoList();
            //if (res == false) {
            //    return false;
            //}
            //  var form = $('#FormUpload')[0];
            //  var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/EditToDoList?Task="+task+"&Id="+Id,
                //    data: dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //    alert(result) remove alert
                    if (result == "0") {
                        loadToDoList();
                        clearToDoList();
                    }
                    else {
                        $('#lblErrorToDoList').css('display', 'block')
                        $('#lblErrorToDoList').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorToDoList').css('display', 'block');
                    $('#lblErrorToDoList').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //function for deleting employee's record
        function DeleleToDoList(ID) {
            //var ans = confirm("Are you sure you want to delete this record?");
            //if (ans) {
            //  var ID = $(this).attr("data-Id")
            $.ajax({
                url: "/MyDeal/DeleteTask/" + ID,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadToDoList();
                    clearToDoList();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
            // }
        }


        //function for deleting employee's record
        function MarkAsRead(ID, IsDone) {
            //var ans = confirm("Are you sure you want to mark this done?");
            //if (ans) {
            //  var ID = $(this).attr("data-Id")
            //  var IsDone = $(this).attr("data-IsDone")
            $.ajax({
                url: "/MyDeal/MarkAsDone?ID=" + ID + "&IsDone=" + IsDone,
                // data: { ID: ID, IsDone: IsDone },
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadToDoList();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
            //}
        }

        //Function for clearing the textboxes
        function clearToDoList() {
            $('#txtTask').val("");
            $('#lblErrorToDoList').css('display', 'none')
            $('#lblTask').css('display', 'none')
        }
        //Valdidation using jquery
        function validateToDoList() {
            var isValid = true;
            if ($('#txtTask').val().trim() == "") {
                $('#lblTask').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblTask').css('display', 'none');
            }



            return isValid;
        }

        function editable(obj,Id){
            //Reference the Label.
            var label =$(obj).parent().parent().find('#lblName');



            //Reference the TextBox.
            var textbox = label.next();

            //Set the name attribute of the TextBox.
            // textbox[0].name = label.id.replace("lbl", "txt");

            //Assign the value of Label to TextBox.
            textbox.val(label.html());

            //When edit is clicked, hide Label and show TextBox.
            label.hide();
            textbox.css('display', 'block');
            textbox.focus();
            //When focus is lost from TextBox, hide TextBox and show Label.
            textbox.focusout(function () {
                var task=$(this).val();
                var TaskId=Id;
                EditToDoList(task,TaskId);
            });
        }

        // Add a "checked" symbol when clicking on a list item
        //var list = document.querySelector('.ultodolist');
        //list.addEventListener('click', function (ev) {
        //    if (ev.target.tagName === 'LI') {
        //        ev.target.classList.toggle('checked');
        //    }
        //}, false);



    </script>
    @*----------- To Do List  -------------------------------------*@
    @*----------- To Do List Mobile -------------------------------------*@

    @*<script src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>*@
    <script>

        //var ClientId = getParameterByName('ClientId');
        //function getParameterByName(name) {
        //    var regexS = "[\\?&]" + name + "=([^&#]*)",
        //  regex = new RegExp(regexS),
        //  results = regex.exec(window.location.search);
        //    if (results == null) {
        //        return "";
        //    } else {
        //        return decodeURIComponent(results[1].replace(/\+/g, " "));
        //    }
        //}


        $(document).ready(function () {
            clearToDoListMobile();
            loadToDoListMobile();
        });

        function loadToDoListMobile() {
            $.ajax({
                url: "/MyDeal/BindToDoList?TransactionID="+TransactionID,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var html = '';
                    $.each(result, function (key, item) {

                        if (item.IsDone == false) {
                            html +='<li>'
                        }
                        else{
                            html +='<li class="checked">'
                        }
                        if (item.IsDone == false) {
                            html +='<input type="checkbox" onclick="MarkAsReadMobile(' + item.Id + ',' + true + ')"><span id="lblName">'+item.Task+'</span><input type = "text" style="display:none" class="form-control" />'
                        }
                        else{
                            html +='<input type="checkbox" checked onclick="MarkAsReadMobile(' + item.Id + ',' + false + ')"><span id="lblName">'+item.Task+'</span><input type = "text" style="display:none"  class="form-control" />'
                        }


                        html +='<span class="editIcons">'
                        html +='<a href="#!" onclick="editableMobile(this,' + item.Id + ')" title="edit" class="sassIcon" ><img src="/Content/NewVersion/images/edit-doc.png"></a>'
                        html +='<a href="#!" onclick="DeleleToDoListMobile(' + item.Id + ')" title="delete" class="sassIcon" ><img src="/Content/NewVersion/images/delete-doc.png"></a>'
                        html +=' </span>'
                        html +='</div>'
                        html +='</li>'
                    });

                    $('#myToDoList_1').html(html);
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //Add Data Function
        function AddToDoListMobile() {
            var res = validateToDoListMobile();
            if (res == false) {
                return false;
            }
            var form = $('#FormUploadToDoList_1')[0];
            var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/AddToDoList?TransactionID="+TransactionID,
                data: dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //    alert(result) remove alert
                    if (result == "0") {
                        loadToDoListMobile();
                        clearToDoListMobile();
                    }
                    else {
                        $('#lblErrorToDoList_1').css('display', 'block')
                        $('#lblErrorToDoList_1').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorToDoList_1').css('display', 'block');
                    $('#lblErrorToDoList_1').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }


        //Add Data Function
        function EditToDoListMobile(task,Id) {
            //var res = validateToDoList();
            //if (res == false) {
            //    return false;
            //}
            //  var form = $('#FormUpload')[0];
            //  var dataString = new FormData(form);
            $.ajax({
                url: "/MyDeal/EditToDoList?Task="+task+"&Id="+Id,
                //    data: dataString,
                type: "POST",
                cache: false,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (result) {
                    //    alert(result) remove alert
                    if (result == "0") {
                        loadToDoListMobile();
                        clearToDoListMobile();
                    }
                    else {
                        $('#lblErrorToDoList_1').css('display', 'block')
                        $('#lblErrorToDoList_1').text(result)
                    }


                },
                error: function (errormessage) {
                    $('#lblErrorToDoList_1').css('display', 'block');
                    $('#lblErrorToDoList_1').text('Sorry, Something went wrong. Please try again.');
                }
            });
        }

        //function for deleting employee's record
        function DeleleToDoListMobile(ID) {
            //var ans = confirm("Are you sure you want to delete this record?");
            //if (ans) {
            //  var ID = $(this).attr("data-Id")
            $.ajax({
                url: "/MyDeal/DeleteTask/" + ID,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadToDoListMobile();
                    clearToDoListMobile();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
            // }
        }


        //function for deleting employee's record
        function MarkAsReadMobile(ID, IsDone) {
            //var ans = confirm("Are you sure you want to mark this done?");
            //if (ans) {
            //  var ID = $(this).attr("data-Id")
            //  var IsDone = $(this).attr("data-IsDone")
            $.ajax({
                url: "/MyDeal/MarkAsDone?ID=" + ID + "&IsDone=" + IsDone,
                // data: { ID: ID, IsDone: IsDone },
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {

                    loadToDoListMobile();
                },
                error: function (errormessage) {
                    alert('Sorry, Something went wrong. Please try again.');
                }
            });
            //}
        }

        //Function for clearing the textboxes
        function clearToDoListMobile() {
            $('#txtTask_1').val("");
            $('#lblErrorToDoList_1').css('display', 'none')
            $('#lblTask_1').css('display', 'none')
        }
        //Valdidation using jquery
        function validateToDoListMobile() {
            var isValid = true;
            if ($('#txtTask_1').val().trim() == "") {
                $('#lblTask_1').css('display', 'block');
                isValid = false;
            }
            else {
                $('#lblTask_1').css('display', 'none');
            }



            return isValid;
        }

        function editableMobile(obj,Id){
            //Reference the Label.
            var label =$(obj).parent().parent().find('#lblName');



            //Reference the TextBox.
            var textbox = label.next();

            //Set the name attribute of the TextBox.
            // textbox[0].name = label.id.replace("lbl", "txt");

            //Assign the value of Label to TextBox.
            textbox.val(label.html());

            //When edit is clicked, hide Label and show TextBox.
            label.hide();
            textbox.css('display', 'block');
            textbox.focus();
            //When focus is lost from TextBox, hide TextBox and show Label.
            textbox.focusout(function () {
                var task=$(this).val();
                var TaskId=Id;
                EditToDoListMobile(task,TaskId);
            });
        }

        // Add a "checked" symbol when clicking on a list item
        //var list = document.querySelector('.ultodolist');
        //list.addEventListener('click', function (ev) {
        //    if (ev.target.tagName === 'LI') {
        //        ev.target.classList.toggle('checked');
        //    }
        //}, false);



    </script>
    @*----------- To Do List  -------------------------------------*@
    <style>
        .ui-front {
            z-index: 9999;
            width: 200px;
        }

        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
        }

        .modal-header {
            background: #0bb7a5;
            color: #fff;
        }

        .close {
            text-shadow: none;
            opacity: .5;
            color: #fff;
            opacity: 1;
            font-size: 30px;
        }

        ul#myToDoList li {
            float: left !important;
            width: 100% !important;
        }

        ul#myToDoList li {
            border-bottom: 1px solid #ddd;
        }

        ul#myToDoList_1 li {
            float: left !important;
            width: 100% !important;
        }

        ul#myToDoList_1 li {
            border-bottom: 1px solid #ddd;
        }
    </style>



    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
    //Added by sonika
    $(document).ready(function () {
        //$(document).ajaxStart(function () {
        //    $("#ajaxLoading").css("display", "none");
        //    $("#ajax-backdrop").css("display", "none");
        //});txtClientId
        $('#VendorType').autocomplete({
            source: function (request, response) {
                //$("#ajaxLoading").attr("style", "display: none");
                //$("#ajax-backdrop").attr("style", "display: none");
                var itemnamecodes = new Array();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Autocomplete", "MyDeal")',
                            dataType: 'json',
                            data: { term: request.term },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return { label: item.Key, Id: item.Value };
                                }))
                            }
                        })
                    },
                    minLength: 0,

                    select: function (e, i) {
                        $("#ListingSHA").val(i.item.Id);
                        $('#txtTitleV').val("");

                    }
                }).focus(function() {
                    $(this).autocomplete("search", "");
                    $('#VendorType').autocomplete({
                        autoFocus: true
                    })
                });

                $('#txtTitleV').autocomplete({
                    source: function (request, response) {
                        //$("#ajaxLoading").css("display", "none");
                        //$("#ajax-backdrop").css("display", "none");
                        var itemnamecodes = new Array();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ClientVendorautocomplete", "MyDeal")',
                            dataType: 'json',
                            data: { term: request.term,ClientId:$('#txtClientId').val(), VendorType:$('#VendorType').val()},
                            success: function (data) {
                                console.log(data)
                                response($.map(data, function (item) {
                                    return { label: item.Key, Id: item.Value };
                                }))
                            }
                        })
                    },
                    minLength: 0,

                    select: function (e, i) {
                        var mystring=i.item.Id;
                        console.log(mystring);
                        $("#ListingCVendor").val(i.item.key);
                        var res = mystring.split("}");
                        console.log(res);
                        $("#txtPhone").val(res[0]);
                        $("#txtEmail").val(res[1]);
                        $("#VendorType").val(res[2]);

                        if($("#txtVenId").val().length > 0 )
                        {
                            $("#txtSubTitle").val(res[3]);
                            $("#txtWebsitelink").val(res[4]);
                            $("#txtLocation").val(res[5]);
                            $("#txtVenImage").val(res[6]);
                            $("#txtAbout").val(res[7]);
                        }

                    }
                }).focus(function() {
                    $(this).autocomplete("search", "");
                    $('#txtTitleV').autocomplete({
                        autoFocus: true
                    })
                });

                $('#txtTitle').autocomplete({
                    source: function (request, response) {
                        var itemnamecodes = new Array();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ClientDocumentautocomplete", "MyDeal")',
                            dataType: 'json',
                            data: { term: request.term,ClientId:$('#txtClientId').val(), TransactionId:$('#txtTransactionId').val()},
                            success: function (data) {
                                console.log(data)
                                response($.map(data, function (item) {
                                    return { label: item.Key, Id: item.Value };
                                }))
                            }
                        })
                    },
                    select: function (e, i) {
                        $("#txtDescription").val(i.item.Id);
                    }
                })
            })
                            </script>


}



<style>
    @@import url(https://fonts.googleapis.com/css?family=Istok+Web);

    figcaption {
        position: absolute;
        bottom: 0;
        background: rgba(0,0,0,0.4);
        color: #fff;
        width: 100%;
        font-size: 6rem;
        padding: 6.6rem;
        line-height: 70px;
    }

    .jssora093 {
        display: none;
    }

    /*@@media only screen and (max-width: 768px) {
            div.DocumentModalPopUp {
                max-width: 600px !important;
                left: 20px !important;
                top: 10%;
                bottom: 10%;
                right: 20px !important;
                transform: none;
            }
        }*/

    .my-profile label {
        margin-top: 0px !important;
        text-transform: none !important;
    }
</style>
<!--Default installation-->
